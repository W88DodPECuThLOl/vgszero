./assignment
N: A = B        --->  `LD` `A` `,` `B`
N: A += B       --->  `ADD` `A` `,` `B`
N: A -= B       --->  `SUB` `A` `,` `B`
N: A *= B       --->  `MUL` `A` `,` `B`
N: A /= B       --->  `DIV` `A` `,` `B`
N: A %= B       --->  `MOD` `A` `,` `B`
N: A &= B       --->  `AND` `A` `,` `B`
N: A |= B       --->  `OR` `A` `,` `B`
N: A ^= B       --->  `XOR` `A` `,` `B`
N: A <<= B      --->  `SL` `A` `,` `B`
N: A >>= B      --->  `SR` `A` `,` `B`
E: A =          --->  Illegal assignment expression without left or right side.
E: = B          --->  Illegal assignment expression without left or right side.
E: =            --->  Illegal assignment expression without left or right side.
E: A = B += C   --->  Multiple assignments are described.
N: AB           --->  `AB`
./binary
N: #binary "data.bin" --->  Binary: "data.bin" `data.bin`
N: #binary "data.bin", 0 --->  Binary: "data.bin" `data.bin` `,` `0`
N: #binary "data.bin", 96 --->  Binary: "data.bin" `data.bin` `,` `96`
N: #binary "data.bin", 4000 --->  Binary: "data.bin" `data.bin` `,` `4000`
N: #binary "data.bin", 4096 --->  Binary: "data.bin" `data.bin` `,` `4096`
E: #binary "data.bin", 4097 --->  #binary specified file size is smaller than the offset value.
E: #binary "data.bin", -1 --->  Unexpected token: -
E: #binary "data.bin", --->  #binary offset value is not specified.
N: #binary "data.bin", 0, 100 --->  Binary: "data.bin" `data.bin` `,` `0` `,` `100`
N: #binary "data.bin", 100, 100 --->  Binary: "data.bin" `data.bin` `,` `100` `,` `100`
N: #binary "data.bin", 96, 4000 --->  Binary: "data.bin" `data.bin` `,` `96` `,` `4000`
E: #binary "data.bin", 96, 4001 --->  Cannot read 4001 bytes.
E: #binary "data.bin", 0, -1 --->  Unexpected token: -
E: #binary "data.bin", 0, --->  #binary size value is not specified.
E: #binary      --->  #binary syntax error.
E: #binary data.bin --->  #binary syntax error.
E: hoge #binary "data.bin" --->  #binary must appear at the beginning of the line.
E: #binary "file_not_found" --->  #binary file open error: file_not_found
./bracket_to_address
N: LD (X), Y    --->  $???? <LD> _( `X` )_ `,` `Y`
N: LD (X+Z), Y  --->  $???? <LD> _( `X` `+` `Z` )_ `,` `Y`
N: LD (X)+Z, Y  --->  $???? <LD> `(` `X` `)` `+` `Z` `,` `Y`
N: LD Z+(X), Y  --->  $???? <LD> `Z` `+` `(` `X` `)` `,` `Y`
N: LD X, (Y)    --->  $???? <LD> `X` `,` _( `Y` )_
N: LD X, (Y+Z)  --->  $???? <LD> `X` `,` _( `Y` `+` `Z` )_
N: LD X, (Y)+Z  --->  $???? <LD> `X` `,` `(` `Y` `)` `+` `Z`
N: LD X, Z+(Y)  --->  $???? <LD> `X` `,` `Z` `+` `(` `Y` `)`
N: ()           --->  `(` `)`
N: ()()         --->  `(` `)` `(` `)`
N: (())         --->  `(` `(` `)` `)`
N: LD ((X)), Y  --->  $???? <LD> _( `(` `X` `)` )_ `,` `Y`
./bracket_eliminate
N: (123)        --->  0x7B
N: (0x123)      --->  0x123
N: ($123)       --->  0x123
N: (0b1010)     --->  0xA
N: (%1010)      --->  0xA
N: (X)          --->  `(` `X` `)`
N: (1)(2)(3)    --->  0x1 0x2 0x3
N: (1)(Z)(3)    --->  0x1 `(` `Z` `)` 0x3
N: (((1)))      --->  0x1
N: (1+2)        --->  `(` 0x1 `+` 0x2 `)`
N: ((1)+((2)))  --->  `(` 0x1 `+` 0x2 `)`
./decimal
oct2dec:              ---> (empty) OK
oct2dec: 1            ---> 1 OK
oct2dec: 123456       ---> 42798 OK
oct2dec: 1234567      ---> 342391 OK
oct2dec: 12345678     ---> (empty) OK
oct2dec: 1a           ---> (empty) OK
oct2dec: a1           ---> (empty) OK
hex2dec:              ---> (empty) OK
hex2dec: 1            ---> 1 OK
hex2dec: ffff         ---> (empty) OK
hex2dec: FFFF         ---> 65535 OK
hex2dec: EF           ---> 239 OK
hex2dec: FG           ---> (empty) OK
bin2dec:              ---> (empty) OK
bin2dec: 10101        ---> 21 OK
bin2dec: 01010        ---> 10 OK
bin2dec: 1            ---> 1 OK
bin2dec: 0            ---> 0 OK
bin2dec: 12           ---> (empty) OK
./define_parse
N: #define AA   --->  `#DEFINE` `AA`
N: #define BB C --->  `#DEFINE` `BB` `C`
E: #define AA B --->  Duplicate definition name AA in #define.
E: #define CC CC --->  CC is included in #define CC.
E: #define      --->  No definition name specified in #define.
E: A #define    --->  #define must appear at the beginning of the line.
E: #define #DEFINE --->  Multiple #defines cannot be defined on a single line.
./define_replace
N: A B C        --->  `AAA` `B` `C`
N: A B C        --->  `AAA` `BB` `BB` `C`
N: X B C        --->  `X` `BB` `BB` `C`
E: A B C        --->  Detect circular references in #define definition names.
N: D.A          --->  `FOO`
E: D.B          --->  `B` was not defined at `D`
./enum
 `ENUM` `FOO` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
N: LD A, foo.hoge --->  `LD` `A` `,` 0x0
 `ENUM` `FOO` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
N: LD A, foo.hige --->  `LD` `A` `,` 0x1
 `ENUM` `FOO` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
N: LD A, foo.hage --->  `LD` `A` `,` 0x2
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hoge --->  `LD` `A` `,` 0xA
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hige --->  `LD` `A` `,` 0xB
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hage --->  `LD` `A` `,` 0x64
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, fuga.hoge --->  `LD` `A` `,` 0x0
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, fuga.hige --->  `LD` `A` `,` 0x1
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, fuga.hage --->  `LD` `A` `,` 0x2
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hoge --->  `LD` `A` `,` 0xA
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hige --->  `LD` `A` `,` 0xB
 `ENUM` `FUGA` `{`
 `HOGE`
 `HIGE`
 `HAGE`
 `}`
 `ENUM` `FOO`
 `{`
 `HOGE` `=` `10`
 `HIGE`
 `HAGE` `=` `100`
 `}`
N: LD A, foo.hage --->  `LD` `A` `,` 0x64
E: ---> `enum` must be defined at the beginning of the line.
E: ---> No enum name specified.
E: ---> Invalid enum name: ,
E: ---> Scope is not defined: FUGA
E: ---> Scope was not closed.
E: ---> Scope was not closed.
E: ---> Unexpected symbol: HOGE
E: ---> Unexpected symbol: }
E: ---> Unexpected symbol: FOO
E: ---> Illegal enum symbol number: 2
E: ---> Illegal enum symbol number: 4
E: ---> Unexpected symbol: HIGE
E: ---> Unexpected symbol: FUGA
./formulas_evaluate
N: 1+2+3        --->  0x6
N: 1+2+3*4      --->  0xF
N: 1+2+3*4/2    --->  0x9
N: (1+2+3)*4/2  --->  0xC
N: (1+2+3)*(4/2+1) --->  0x12
N: (1+(2+3))+4  --->  0xA
N: A+1          --->  <A> `+` 0x1
N: AA+1         --->  `AA` `+` 0x1
N: A-1          --->  <A> `-` 0x1
N: AA-1         --->  `AA` `-` 0x1
E: A*1          --->  Illegal expression with no specification of the number of operations to be performed.
E: A/1          --->  Illegal expression with no specification of the number of operations to be performed.
E: 1+A          --->  Illegal expression with no specification of the number of operations to be performed.
E: 1*A          --->  Illegal expression with no specification of the number of operations to be performed.
E: 1/0          --->  Division by zero.
E: 1/(5-5)      --->  Division by zero.
E: 3/(1*2/3)    --->  Division by zero.
./formulas_evaluate_array
N: [1+2+3]      --->  `[` 0x6 `]`
N: []           --->  `[` `]`
N: [1+2+3],[5*6/2] --->  `[` 0x6 `]` `,` `[` 0xF `]`
./increment
N: LD (HL++), A --->  `LD` `(` <HL> `)` `,` <A>
                $???? <INC> <HL>
N: LD (++HL), A --->  $???? <INC> <HL>
                `LD` `(` <HL> `)` `,` <A>
N: LD (HL--), A --->  `LD` `(` <HL> `)` `,` <A>
                $???? <DEC> <HL>
N: LD (--HL), A --->  $???? <DEC> <HL>
                `LD` `(` <HL> `)` `,` <A>
N: LD (HL++), A++ --->  `LD` `(` <HL> `)` `,` <A>
                $???? <INC> <A>
                $???? <INC> <HL>
N: LD (++HL), ++A --->  $???? <INC> <HL>
                $???? <INC> <A>
                `LD` `(` <HL> `)` `,` <A>
N: LD (++HL), A++ --->  $???? <INC> <HL>
                `LD` `(` <HL> `)` `,` <A>
                $???? <INC> <A>
N: LD (HL), ++A-- --->  $???? <INC> <A>
                `LD` `(` <HL> `)` `,` <A>
                $???? <DEC> <A>
E: LD++         --->  `++` or `--` can only be specified before or after the register.
E: ++           --->  `++` or `--` can only be specified before or after the register.
E: ++--         --->  `++` or `--` can only be specified before or after the register.
E: IYH++        --->  `++` or `--` cannot be specified in the IYH or IYL registers.
E: IYL++        --->  `++` or `--` cannot be specified in the IYH or IYL registers.
E: A++ B--      --->  Illegal `++` or `--` sequence.
./label_parse
N: .label1      --->  $???? LABEL1:
N: @label       --->  $???? LABEL@LABEL1:
N: label2:      --->  $???? LABEL2:
N: @label       --->  $???? LABEL@LABEL2:
E: label1:      --->  Duplicate label: LABEL1
E: 0label1:     --->  The first letter is not an alphabetic letter: 0LABEL1
N: label3: FOO  --->  $???? LABEL3:
                `FOO`
./label_parse_jump
N: JR LABEL1    --->  `JR` `LABEL1`
N: JR LABEL2    --->  `JR` `LABEL2`
N: JR @LABEL    --->  `JR` `LABEL@LABEL2`
N: JR LABEL@LABEL1 --->  `JR` `LABEL@LABEL1`
N: JR LABEL@LABEL2 --->  `JR` `LABEL@LABEL2`
E: JR @Unknown  --->  Unknown label specified: @UNKNOWN
E: JR LABEL@Unknown --->  Label `UNKNOWN` is undefined.
E: JR UNKNOWN@LABEL1 --->  Label `@UNKNOWN` is undefined in `LABEL1`.
N: JR @         --->  `JR` `@`
./label_extract_anonymous
N: [ ]  $???? $@+0#0:
   [x]  `JR` `@` `+` `$@+0#0`
N: [ ]  $???? $@-1#0:
   [ ]  `NOP`
   [x]  `JR` `@` `-` `$@-1#0`
   [ ]  `NOP`
N: [ ]  `NOP`
   [x]  `JR` `@` `+` `$@+1#0`
   [ ]  $???? $@+1#0:
   [ ]  `NOP`
E: [ ]  `NOP`
   [x]  `JR` `@` `+` `$@+1#0`
   [ ]  $???? LABEL:
Anonymous labels cannot cross another label: LABEL
E: [ ]  `NOP`
   [ ]  $???? LABEL_UP:
   [x]  `JR` `@` `-` `$@-1#0`
   [ ]  $???? LABEL_DOWN:
   [ ]  `NOP`
Anonymous labels cannot cross another label: LABEL_UP
E: [x]  `JR` `@`
Anonymous label syntax error. (no token)
E: [x]  `JR` `@` `*`
Anonymous label syntax error. (invalid token: *)
E: [x]  `JR` `@` `+`
Anonymous label syntax error. (no numeric specified)
E: [x]  `JR` `@` `+` `A`
Unexpected symbol specified: A
E: [x]  `JR` `@` `+` `0` `B`
Unexpected symbol specified: B
E: [x]  `JR` `@` `+` `$@+2#0`
   [ ]  `STRUCT` `FOO` `$C000`
   [ ]  `{`
   [ ]  `}`
Anonymous labels cannot cross scopes.
E: [x]  `JR` `@` `+` `$@+2#0`
   [ ]  `#BINARY`
   [ ]  `{`
   [ ]  `}`
Anonymous labels cannot cross #BINARY.
./literal
N: LD A, "HOGE" --->  `LD` `A` `,` `$0`
                $???? $0:
                $???? <DB> 0x48 `,` 0x4F `,` 0x47 `,` 0x45 `,` 0x0
./nametable
N: A            ---> OK
E: 0A           ---> The first letter is not an alphabetic letter: 0A
E: A            ---> Reserved symbol name A was specified.
N: AA           ---> OK
N: AAA          ---> OK
./numeric
N: 1,2,3        --->  0x1 `,` 0x2 `,` 0x3
N: 0+1,+2,+3    --->  0x0 `+` 0x1 `,` 0x2 `,` 0x3
N: 0-1,-2,-3    --->  0x0 `-` 0x1 `,` 0xFFFFFFFE `,` 0xFFFFFFFD
N: $00ff        --->  0xFF
N: 0xffff       --->  0xFFFF
E: $00fg        --->  Invalid hexadecimal number: $00FG
N: %10101       --->  0x15
N: 0b01010      --->  0xA
E: %0102        --->  Invalid binary number: %0102
./offset_parse
N: offset(hoge.foo) --->  `HOGE.FOO`
E: offset hoge.foo) --->  No `(` in offset syntax.
E: offset (+)   --->  No structure name specified in offset syntax.
E: offset (hoge) --->  No structure field name specified in offset syntax.
E: offset (hoge.foo --->  No `)` in offset syntax.
./offset_replace
N: offset(dummy.var1) --->  0x0
N: offset(dummy.var2) --->  0x1
N: offset(dummy.var3) --->  0x2
E: offset(dummyy.var3) --->  Undefined structure DUMMYY is specified in offset.
E: offset(dummy.var4) --->  Field name `VAR4` is not defined in structure `DUMMY`.
./operand
N: LD (IX+10), A --->  `LD` `(` <IX> `+` `10` `)` `,` <A>
./org
N: org $100     --->  `256`
E: a org        --->  `org` must appear at the beginning of the line.
E: org          --->  `org` address is not specified.
E: org hoge     --->  Unexpected symbol: HOGE
N: org 0xFFFF   --->  `65535`
E: org 65536    --->  `org` address is incorrect: 65536
E: org 65535 org --->  Unexpected symbol: ORG
E: org 65534    --->  Multiple orgs must be written in ascending order from the beginning of the line.
E: org 65535    --->  Multiple orgs must be written in ascending order from the beginning of the line.
./sizeof_parse
N: sizeof(hoge) --->  sizeof(HOGE)
E: sizeof hoge) --->  No `(` in sizeof syntax.
E: sizeof (+)   --->  No structure name specified in sizeof syntax.
E: sizeof (hoge --->  No `)` in sizeof syntax.
./sizeof_replace
N: sizeof(dummy) --->  0x3
E: sizeof(dummyy) --->  Undefined structure DUMMYY is specified in sizeof.
Testing: struct
E: `struct` must appear at the beginning of the line. ... OK
E: Duplicate field name `VAR1` in struct `HOGE` ... OK
E: Invalid structure name: HOGE.COM ... OK
E: Incorrect syntax for struct arrow. ... OK
E: Incorrect syntax for struct arrow. ... OK
E: Incorrect syntax for struct arrow. ... OK
E: Unexpected symbol: ] ... OK
E: Unexpected symbol: HIGE ... OK
E: Unexpected symbol: 2 ... OK
E: struct array must have a value of 1 or more: 0 ... OK
E: Incorrect syntax for struct: ADDR ... OK
N: struct_noaddr2
../vgsasm struct_noaddr2.asm -v
struct_noaddr2.asm:0005 $0000 <LD> <HL> `,` 0x0
diff struct_noaddr2.bin struct_noaddr2.exp
E: Invalid `}` without corresponding `{`. ... OK
E: The scope `{` specified in this line is not closed with `}`. ... OK
E: It must be defined on the line after the definition of struct specified by the arrow operator. ... OK
E: It must be defined on the line after the definition of struct specified by the arrow operator. ... OK
E: Invalid structure field name: VAR.FOO ... OK
E: Invalid field VAR1 in structure HOGE ... OK
E: Invalid field VAR1 in structure HOGE ... OK
E: Specify non-numeric number of field VAR1 in structure HOGE: AAA ... OK
E: Unknown structure name FOO specified in field VAR1 of structure HOGE ... OK
E: Detects circular references between structures ... OK
E: Unknown field name in structure HOGE: VAR2 ... OK
E: Illegal array structure element: ] ... OK
E: Illegal array structure element: FOO ... OK
E: Illegal array structure element: 2 ... OK
E: Invalid array field designation: VAR1 ... OK
E: Unknown field name in structure HOGE: VAR2 ... OK
N: struct_normal
../vgsasm struct_normal.asm -v
struct_normal.asm:0019 $0000 <LD> <HL> `,` 0xC000
struct_normal.asm:0020 $0003 <LD> <HL> `,` 0xC001
struct_normal.asm:0021 $0006 <LD> <HL> `,` 0xC003
struct_normal.asm:0023 $0009 <LD> <DE> `,` 0xC005
struct_normal.asm:0024 $000C <LD> <DE> `,` 0xC006
struct_normal.asm:0025 $000F <LD> <DE> `,` 0xC008
struct_normal.asm:0027 $0012 <LD> <BC> `,` 0xC00F
struct_normal.asm:0028 $0015 <LD> <BC> `,` 0xC010
struct_normal.asm:0029 $0018 <LD> <BC> `,` 0xC012
struct_normal.asm:0031 $001B <LD> <BC> `,` 0xC01E
struct_normal.asm:0032 $001E <LD> <BC> `,` 0xC01F
struct_normal.asm:0033 $0021 <LD> <BC> `,` 0xC021
diff struct_normal.bin struct_normal.exp
Testing: macro
E: `#macro` must appear at the beginning of the line. ... OK
E: Invalid #macro syntax. ... OK
E: Duplicate #macro names are defined: FOO ... OK
E: Invalid #macro syntax. (Parentheses) ... OK
E: Invalid #macro syntax. (Arguments not separated by commas) ... OK
E: Invalid #macro syntax. (Invalid argument name: HL) ... OK
E: Invalid #macro syntax. (Duplicate argument names: ARG1) ... OK
E: `(` is not closed with `)`. ... OK
E: Unspecified bracket for macro call. ... OK
E: Unexpected symbol: A ... OK
E: Unexpected symbol: B ... OK
E: A macro argument name conflict with the name used for structs, defines, etc.: ARG1 ... OK
E: Detect symbols that are not in the start scope of the macro: LD ... OK
E: Macro calls are circulating: HOGE ... OK
E: Unexpected macro argument symbol: 2 ... OK
E: Invalid macro argument type: ) ... OK
E: Invalid macro argument type: HL ... OK
E: Macro argument mismatch: FOO ... OK
N: macro_normal
../vgsasm macro_normal.asm -v
macro_normal.asm:0004 $0000 <LD> <BC> `,` 0x1
macro_normal.asm:0005 $0003 <LD> <DE> `,` 0x5
macro_normal.asm:0006 $0006 <LD> <HL> `,` 0xF
../lib/vgszero.inc:0102 $0009 <PUSH> <BC>
../lib/vgszero.inc:0103 $000A <PUSH> <DE>
../lib/vgszero.inc:0104 $000B <PUSH> <HL>
../lib/vgszero.inc:0105 $000C <LD> <BC> `,` 0xC000
../lib/vgszero.inc:0106 $000F <LD> <DE> `,` `$0`
../lib/vgszero.inc:0107 $0012 <LD> <HL> `,` 0x7
../lib/vgszero.inc:0108 $0015 <OUT> _( 0xC3 )_ `,` <A>
../lib/vgszero.inc:0109 $0017 <POP> <HL>
../lib/vgszero.inc:0110 $0018 <POP> <DE>
../lib/vgszero.inc:0111 $0019 <POP> <BC>
../lib/vgszero.inc:0116 $001A <PUSH> <AF>
../lib/vgszero.inc:0117 $001B <PUSH> <BC>
../lib/vgszero.inc:0118 $001C <PUSH> <HL>
../lib/vgszero.inc:0119 $001D <LD> <BC> `,` 0xC020
../lib/vgszero.inc:0120 $0020 <LD> <A> `,` 0x20
../lib/vgszero.inc:0121 $0022 <LD> <HL> `,` 0x400
../lib/vgszero.inc:0122 $0025 <OUT> _( 0xC3 )_ `,` <A>
../lib/vgszero.inc:0123 $0027 <POP> <HL>
../lib/vgszero.inc:0124 $0028 <POP> <BC>
../lib/vgszero.inc:0125 $0029 <POP> <AF>
macro_normal.asm:0017 $002A <CALL> `HIGE`
macro_normal.asm:0004 $002D <LD> <BC> `,` 0x1
macro_normal.asm:0005 $0030 <LD> <DE> `,` 0x2
macro_normal.asm:0006 $0033 <LD> <HL> `,` 0xC000
macro_normal.asm:0020 $0036 HIGE:
macro_normal.asm:0021 $0036 <RET>
                :0000 $0037 $0:
                :0000 $0037 <DB> 0x53 `,` 0x74 `,` 0x72 `,` 0x69 `,` 0x6E `,` 0x67 `,` 0x0
diff macro_normal.bin macro_normal.exp
Testing: mnemonic bits
N: m_bit_nso
../vgsasm m_bit_nso.asm -v
   m_bit_nso.asm:0001 $0000 <BIT> 0x0 `,` <A>
   m_bit_nso.asm:0002 $0002 <BIT> 0x1 `,` <B>
   m_bit_nso.asm:0003 $0004 <BIT> 0x2 `,` <C>
   m_bit_nso.asm:0004 $0006 <BIT> 0x3 `,` <D>
   m_bit_nso.asm:0005 $0008 <BIT> 0x4 `,` <E>
   m_bit_nso.asm:0006 $000A <BIT> 0x5 `,` <H>
   m_bit_nso.asm:0007 $000C <BIT> 0x6 `,` <L>
   m_bit_nso.asm:0008 $000E <SET> 0x7 `,` <A>
   m_bit_nso.asm:0009 $0010 <RES> 0x0 `,` <B>
diff m_bit_nso.bin m_bit_nso.exp
E: Numerical range incorrect: 8 ... OK
E: Illegal BIT/SET/RES instruction. ... OK
N: m_bit_nsaoa
../vgsasm m_bit_nsaoa.asm -v
 m_bit_nsaoa.asm:0001 $0000 <BIT> 0x0 `,` _( <HL> )_
 m_bit_nsaoa.asm:0002 $0002 <BIT> 0x7 `,` _( <IX> )_
 m_bit_nsaoa.asm:0003 $0006 <BIT> 0x1 `,` _( <IY> )_
 m_bit_nsaoa.asm:0004 $000A <SET> 0x6 `,` _( <IX> )_
 m_bit_nsaoa.asm:0005 $000E <RES> 0x4 `,` _( <IY> )_
diff m_bit_nsaoa.bin m_bit_nsaoa.exp
E: Numerical range incorrect: 8 ... OK
E: Illegal BIT/SET/RES instruction. ... OK
N: m_bit_nsaopna
../vgsasm m_bit_nsaopna.asm -v
m_bit_nsaopna.asm:0001 $0000 <BIT> 0x0 `,` _( <IX> `-` 0x80 )_
m_bit_nsaopna.asm:0002 $0004 <BIT> 0x7 `,` _( <IX> `+` 0x7F )_
m_bit_nsaopna.asm:0003 $0008 <BIT> 0x4 `,` _( <IY> `+` 0x0 )_
m_bit_nsaopna.asm:0004 $000C <BIT> 0x5 `,` _( <IY> `-` 0x1 )_
diff m_bit_nsaopna.bin m_bit_nsaopna.exp
E: Numerical range incorrect: 8 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Illegal BIT/SET/RES instruction. ... OK
Testing: mnemonic calc8
N: m_calc8_o
../vgsasm m_calc8_o.asm -v
   m_calc8_o.asm:0001 $0000 <ADD> <A>
   m_calc8_o.asm:0002 $0001 <ADD> <B>
   m_calc8_o.asm:0003 $0002 <ADD> <C>
   m_calc8_o.asm:0004 $0003 <ADD> <D>
   m_calc8_o.asm:0005 $0004 <ADD> <E>
   m_calc8_o.asm:0006 $0005 <ADD> <H>
   m_calc8_o.asm:0007 $0006 <ADD> <L>
   m_calc8_o.asm:0008 $0007 <ADD> <IXH>
   m_calc8_o.asm:0009 $0009 <ADD> <IXL>
   m_calc8_o.asm:0010 $000B <ADD> <IYH>
   m_calc8_o.asm:0011 $000D <ADD> <IYL>
   m_calc8_o.asm:0013 $000F <ADC> <A>
   m_calc8_o.asm:0014 $0010 <ADC> <B>
   m_calc8_o.asm:0015 $0011 <ADC> <C>
   m_calc8_o.asm:0016 $0012 <ADC> <D>
   m_calc8_o.asm:0017 $0013 <ADC> <E>
   m_calc8_o.asm:0018 $0014 <ADC> <H>
   m_calc8_o.asm:0019 $0015 <ADC> <L>
   m_calc8_o.asm:0020 $0016 <ADC> <IXH>
   m_calc8_o.asm:0021 $0018 <ADC> <IXL>
   m_calc8_o.asm:0022 $001A <ADC> <IYH>
   m_calc8_o.asm:0023 $001C <ADC> <IYL>
   m_calc8_o.asm:0025 $001E <SUB> <A>
   m_calc8_o.asm:0026 $001F <SUB> <B>
   m_calc8_o.asm:0027 $0020 <SUB> <C>
   m_calc8_o.asm:0028 $0021 <SUB> <D>
   m_calc8_o.asm:0029 $0022 <SUB> <E>
   m_calc8_o.asm:0030 $0023 <SUB> <H>
   m_calc8_o.asm:0031 $0024 <SUB> <L>
   m_calc8_o.asm:0032 $0025 <SUB> <IXH>
   m_calc8_o.asm:0033 $0027 <SUB> <IXL>
   m_calc8_o.asm:0034 $0029 <SUB> <IYH>
   m_calc8_o.asm:0035 $002B <SUB> <IYL>
   m_calc8_o.asm:0037 $002D <SBC> <A>
   m_calc8_o.asm:0038 $002E <SBC> <B>
   m_calc8_o.asm:0039 $002F <SBC> <C>
   m_calc8_o.asm:0040 $0030 <SBC> <D>
   m_calc8_o.asm:0041 $0031 <SBC> <E>
   m_calc8_o.asm:0042 $0032 <SBC> <H>
   m_calc8_o.asm:0043 $0033 <SBC> <L>
   m_calc8_o.asm:0044 $0034 <SBC> <IXH>
   m_calc8_o.asm:0045 $0036 <SBC> <IXL>
   m_calc8_o.asm:0046 $0038 <SBC> <IYH>
   m_calc8_o.asm:0047 $003A <SBC> <IYL>
   m_calc8_o.asm:0049 $003C <CP> <A>
   m_calc8_o.asm:0050 $003D <CP> <B>
   m_calc8_o.asm:0051 $003E <CP> <C>
   m_calc8_o.asm:0052 $003F <CP> <D>
   m_calc8_o.asm:0053 $0040 <CP> <E>
   m_calc8_o.asm:0054 $0041 <CP> <H>
   m_calc8_o.asm:0055 $0042 <CP> <L>
   m_calc8_o.asm:0056 $0043 <CP> <IXH>
   m_calc8_o.asm:0057 $0045 <CP> <IXL>
   m_calc8_o.asm:0058 $0047 <CP> <IYH>
   m_calc8_o.asm:0059 $0049 <CP> <IYL>
   m_calc8_o.asm:0061 $004B <AND> <A>
   m_calc8_o.asm:0062 $004C <AND> <B>
   m_calc8_o.asm:0063 $004D <AND> <C>
   m_calc8_o.asm:0064 $004E <AND> <D>
   m_calc8_o.asm:0065 $004F <AND> <E>
   m_calc8_o.asm:0066 $0050 <AND> <H>
   m_calc8_o.asm:0067 $0051 <AND> <L>
   m_calc8_o.asm:0068 $0052 <AND> <IXH>
   m_calc8_o.asm:0069 $0054 <AND> <IXL>
   m_calc8_o.asm:0070 $0056 <AND> <IYH>
   m_calc8_o.asm:0071 $0058 <AND> <IYL>
   m_calc8_o.asm:0073 $005A <OR> <A>
   m_calc8_o.asm:0074 $005B <OR> <B>
   m_calc8_o.asm:0075 $005C <OR> <C>
   m_calc8_o.asm:0076 $005D <OR> <D>
   m_calc8_o.asm:0077 $005E <OR> <E>
   m_calc8_o.asm:0078 $005F <OR> <H>
   m_calc8_o.asm:0079 $0060 <OR> <L>
   m_calc8_o.asm:0080 $0061 <OR> <IXH>
   m_calc8_o.asm:0081 $0063 <OR> <IXL>
   m_calc8_o.asm:0082 $0065 <OR> <IYH>
   m_calc8_o.asm:0083 $0067 <OR> <IYL>
   m_calc8_o.asm:0085 $0069 <XOR> <A>
   m_calc8_o.asm:0086 $006A <XOR> <B>
   m_calc8_o.asm:0087 $006B <XOR> <C>
   m_calc8_o.asm:0088 $006C <XOR> <D>
   m_calc8_o.asm:0089 $006D <XOR> <E>
   m_calc8_o.asm:0090 $006E <XOR> <H>
   m_calc8_o.asm:0091 $006F <XOR> <L>
   m_calc8_o.asm:0092 $0070 <XOR> <IXH>
   m_calc8_o.asm:0093 $0072 <XOR> <IXL>
   m_calc8_o.asm:0094 $0074 <XOR> <IYH>
   m_calc8_o.asm:0095 $0076 <XOR> <IYL>
diff m_calc8_o.bin m_calc8_o.exp
E: Illegal 8-bit arithmetic instruction. ... OK
N: m_calc8_n
../vgsasm m_calc8_n.asm -v
   m_calc8_n.asm:0001 $0000 <ADD> 0x0
   m_calc8_n.asm:0002 $0002 <ADC> 0x0
   m_calc8_n.asm:0003 $0004 <SUB> 0x0
   m_calc8_n.asm:0004 $0006 <SBC> 0x0
   m_calc8_n.asm:0005 $0008 <CP> 0x0
   m_calc8_n.asm:0006 $000A <AND> 0x0
   m_calc8_n.asm:0007 $000C <OR> 0x0
   m_calc8_n.asm:0008 $000E <XOR> 0x0
diff m_calc8_n.bin m_calc8_n.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
N: m_calc8_n_range3
../vgsasm m_calc8_n_range3.asm -v
m_calc8_n_range3.asm:0001 $0000 <ADD> 0xFFFFFF80
m_calc8_n_range3.asm:0002 $0002 <ADD> 0xFFFFFFFF
m_calc8_n_range3.asm:0003 $0004 <ADD> 0x0
m_calc8_n_range3.asm:0004 $0006 <ADD> 0x1
m_calc8_n_range3.asm:0005 $0008 <ADD> 0x7F
m_calc8_n_range3.asm:0006 $000A <ADD> 0x80
m_calc8_n_range3.asm:0007 $000C <ADD> 0xFF
diff m_calc8_n_range3.bin m_calc8_n_range3.exp
N: m_calc8_ao
../vgsasm m_calc8_ao.asm -v
  m_calc8_ao.asm:0001 $0000 <ADD> _( <HL> )_
  m_calc8_ao.asm:0002 $0001 <ADD> _( <IX> )_
  m_calc8_ao.asm:0003 $0004 <ADD> _( <IY> )_
  m_calc8_ao.asm:0004 $0007 <ADD> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0005 $000A <ADD> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0006 $000D <ADD> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0007 $0010 <ADD> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0009 $0013 <ADC> _( <HL> )_
  m_calc8_ao.asm:0010 $0014 <ADC> _( <IX> )_
  m_calc8_ao.asm:0011 $0017 <ADC> _( <IY> )_
  m_calc8_ao.asm:0012 $001A <ADC> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0013 $001D <ADC> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0014 $0020 <ADC> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0015 $0023 <ADC> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0017 $0026 <SUB> _( <HL> )_
  m_calc8_ao.asm:0018 $0027 <SUB> _( <IX> )_
  m_calc8_ao.asm:0019 $002A <SUB> _( <IY> )_
  m_calc8_ao.asm:0020 $002D <SUB> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0021 $0030 <SUB> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0022 $0033 <SUB> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0023 $0036 <SUB> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0025 $0039 <SBC> _( <HL> )_
  m_calc8_ao.asm:0026 $003A <SBC> _( <IX> )_
  m_calc8_ao.asm:0027 $003D <SBC> _( <IY> )_
  m_calc8_ao.asm:0028 $0040 <SBC> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0029 $0043 <SBC> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0030 $0046 <SBC> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0031 $0049 <SBC> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0033 $004C <CP> _( <HL> )_
  m_calc8_ao.asm:0034 $004D <CP> _( <IX> )_
  m_calc8_ao.asm:0035 $0050 <CP> _( <IY> )_
  m_calc8_ao.asm:0036 $0053 <CP> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0037 $0056 <CP> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0038 $0059 <CP> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0039 $005C <CP> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0041 $005F <AND> _( <HL> )_
  m_calc8_ao.asm:0042 $0060 <AND> _( <IX> )_
  m_calc8_ao.asm:0043 $0063 <AND> _( <IY> )_
  m_calc8_ao.asm:0044 $0066 <AND> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0045 $0069 <AND> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0046 $006C <AND> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0047 $006F <AND> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0049 $0072 <OR> _( <HL> )_
  m_calc8_ao.asm:0050 $0073 <OR> _( <IX> )_
  m_calc8_ao.asm:0051 $0076 <OR> _( <IY> )_
  m_calc8_ao.asm:0052 $0079 <OR> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0053 $007C <OR> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0054 $007F <OR> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0055 $0082 <OR> _( <IY> `+` 0x7F )_
  m_calc8_ao.asm:0057 $0085 <XOR> _( <HL> )_
  m_calc8_ao.asm:0058 $0086 <XOR> _( <IX> )_
  m_calc8_ao.asm:0059 $0089 <XOR> _( <IY> )_
  m_calc8_ao.asm:0060 $008C <XOR> _( <IX> `-` 0x80 )_
  m_calc8_ao.asm:0061 $008F <XOR> _( <IY> `-` 0x80 )_
  m_calc8_ao.asm:0062 $0092 <XOR> _( <IX> `+` 0x7F )_
  m_calc8_ao.asm:0063 $0095 <XOR> _( <IY> `+` 0x7F )_
diff m_calc8_ao.bin m_calc8_ao.exp
E: Illegal 8-bit arithmetic instruction. ... OK
E: Illegal 8-bit arithmetic instruction. ... OK
E: Illegal 8-bit arithmetic instruction. ... OK
N: m_calc8_os
../vgsasm m_calc8_os.asm -v
  m_calc8_os.asm:0001 $0000 <ADD> <A>
  m_calc8_os.asm:0002 $0001 <ADD> <B>
  m_calc8_os.asm:0003 $0002 <ADD> <C>
  m_calc8_os.asm:0004 $0003 <ADD> <D>
  m_calc8_os.asm:0005 $0004 <ADD> <E>
  m_calc8_os.asm:0006 $0005 <ADD> <H>
  m_calc8_os.asm:0007 $0006 <ADD> <L>
  m_calc8_os.asm:0008 $0007 <ADD> <IXH>
  m_calc8_os.asm:0009 $0009 <ADD> <IXL>
  m_calc8_os.asm:0010 $000B <ADD> <IYH>
  m_calc8_os.asm:0011 $000D <ADD> <IYL>
  m_calc8_os.asm:0013 $000F <ADC> <A>
  m_calc8_os.asm:0014 $0010 <ADC> <B>
  m_calc8_os.asm:0015 $0011 <ADC> <C>
  m_calc8_os.asm:0016 $0012 <ADC> <D>
  m_calc8_os.asm:0017 $0013 <ADC> <E>
  m_calc8_os.asm:0018 $0014 <ADC> <H>
  m_calc8_os.asm:0019 $0015 <ADC> <L>
  m_calc8_os.asm:0020 $0016 <ADC> <IXH>
  m_calc8_os.asm:0021 $0018 <ADC> <IXL>
  m_calc8_os.asm:0022 $001A <ADC> <IYH>
  m_calc8_os.asm:0023 $001C <ADC> <IYL>
  m_calc8_os.asm:0025 $001E <SUB> <A>
  m_calc8_os.asm:0026 $001F <SUB> <B>
  m_calc8_os.asm:0027 $0020 <SUB> <C>
  m_calc8_os.asm:0028 $0021 <SUB> <D>
  m_calc8_os.asm:0029 $0022 <SUB> <E>
  m_calc8_os.asm:0030 $0023 <SUB> <H>
  m_calc8_os.asm:0031 $0024 <SUB> <L>
  m_calc8_os.asm:0032 $0025 <SUB> <IXH>
  m_calc8_os.asm:0033 $0027 <SUB> <IXL>
  m_calc8_os.asm:0034 $0029 <SUB> <IYH>
  m_calc8_os.asm:0035 $002B <SUB> <IYL>
  m_calc8_os.asm:0037 $002D <SBC> <A>
  m_calc8_os.asm:0038 $002E <SBC> <B>
  m_calc8_os.asm:0039 $002F <SBC> <C>
  m_calc8_os.asm:0040 $0030 <SBC> <D>
  m_calc8_os.asm:0041 $0031 <SBC> <E>
  m_calc8_os.asm:0042 $0032 <SBC> <H>
  m_calc8_os.asm:0043 $0033 <SBC> <L>
  m_calc8_os.asm:0044 $0034 <SBC> <IXH>
  m_calc8_os.asm:0045 $0036 <SBC> <IXL>
  m_calc8_os.asm:0046 $0038 <SBC> <IYH>
  m_calc8_os.asm:0047 $003A <SBC> <IYL>
  m_calc8_os.asm:0049 $003C <CP> <A>
  m_calc8_os.asm:0050 $003D <CP> <B>
  m_calc8_os.asm:0051 $003E <CP> <C>
  m_calc8_os.asm:0052 $003F <CP> <D>
  m_calc8_os.asm:0053 $0040 <CP> <E>
  m_calc8_os.asm:0054 $0041 <CP> <H>
  m_calc8_os.asm:0055 $0042 <CP> <L>
  m_calc8_os.asm:0056 $0043 <CP> <IXH>
  m_calc8_os.asm:0057 $0045 <CP> <IXL>
  m_calc8_os.asm:0058 $0047 <CP> <IYH>
  m_calc8_os.asm:0059 $0049 <CP> <IYL>
  m_calc8_os.asm:0061 $004B <AND> <A>
  m_calc8_os.asm:0062 $004C <AND> <B>
  m_calc8_os.asm:0063 $004D <AND> <C>
  m_calc8_os.asm:0064 $004E <AND> <D>
  m_calc8_os.asm:0065 $004F <AND> <E>
  m_calc8_os.asm:0066 $0050 <AND> <H>
  m_calc8_os.asm:0067 $0051 <AND> <L>
  m_calc8_os.asm:0068 $0052 <AND> <IXH>
  m_calc8_os.asm:0069 $0054 <AND> <IXL>
  m_calc8_os.asm:0070 $0056 <AND> <IYH>
  m_calc8_os.asm:0071 $0058 <AND> <IYL>
  m_calc8_os.asm:0073 $005A <OR> <A>
  m_calc8_os.asm:0074 $005B <OR> <B>
  m_calc8_os.asm:0075 $005C <OR> <C>
  m_calc8_os.asm:0076 $005D <OR> <D>
  m_calc8_os.asm:0077 $005E <OR> <E>
  m_calc8_os.asm:0078 $005F <OR> <H>
  m_calc8_os.asm:0079 $0060 <OR> <L>
  m_calc8_os.asm:0080 $0061 <OR> <IXH>
  m_calc8_os.asm:0081 $0063 <OR> <IXL>
  m_calc8_os.asm:0082 $0065 <OR> <IYH>
  m_calc8_os.asm:0083 $0067 <OR> <IYL>
  m_calc8_os.asm:0085 $0069 <XOR> <A>
  m_calc8_os.asm:0086 $006A <XOR> <B>
  m_calc8_os.asm:0087 $006B <XOR> <C>
  m_calc8_os.asm:0088 $006C <XOR> <D>
  m_calc8_os.asm:0089 $006D <XOR> <E>
  m_calc8_os.asm:0090 $006E <XOR> <H>
  m_calc8_os.asm:0091 $006F <XOR> <L>
  m_calc8_os.asm:0092 $0070 <XOR> <IXH>
  m_calc8_os.asm:0093 $0072 <XOR> <IXL>
  m_calc8_os.asm:0094 $0074 <XOR> <IYH>
  m_calc8_os.asm:0095 $0076 <XOR> <IYL>
diff m_calc8_os.bin m_calc8_os.exp
E: Illegal 8-bit arithmetic instruction. ... OK
E: Illegal 8-bit arithmetic instruction. ... OK
Testing: mnemonic calc16
N: m_calc16_add_bc_a
../vgsasm m_calc16_add_bc_a.asm -v
m_calc16_add_bc_a.asm:0001 $0000 <ADD> <BC> `,` <A>
diff m_calc16_add_bc_a.bin m_calc16_add_bc_a.exp
N: m_calc16_add_de_a
../vgsasm m_calc16_add_de_a.asm -v
m_calc16_add_de_a.asm:0001 $0000 <ADD> <DE> `,` <A>
diff m_calc16_add_de_a.bin m_calc16_add_de_a.exp
N: m_calc16_add_hl_a
../vgsasm m_calc16_add_hl_a.asm -v
m_calc16_add_hl_a.asm:0001 $0000 <ADD> <HL> `,` <A>
diff m_calc16_add_hl_a.bin m_calc16_add_hl_a.exp
N: m_calc16_hl_rr
../vgsasm m_calc16_hl_rr.asm -v
m_calc16_hl_rr.asm:0001 $0000 <ADD> <HL> `,` <BC>
m_calc16_hl_rr.asm:0002 $0001 <ADD> <HL> `,` <DE>
m_calc16_hl_rr.asm:0003 $0002 <ADD> <HL> `,` <HL>
m_calc16_hl_rr.asm:0004 $0003 <ADD> <HL> `,` <SP>
m_calc16_hl_rr.asm:0006 $0004 <ADC> <HL> `,` <BC>
m_calc16_hl_rr.asm:0007 $0006 <ADC> <HL> `,` <DE>
m_calc16_hl_rr.asm:0008 $0008 <ADC> <HL> `,` <HL>
m_calc16_hl_rr.asm:0009 $000A <ADC> <HL> `,` <SP>
m_calc16_hl_rr.asm:0011 $000C <SBC> <HL> `,` <BC>
m_calc16_hl_rr.asm:0012 $000E <SBC> <HL> `,` <DE>
m_calc16_hl_rr.asm:0013 $0010 <SBC> <HL> `,` <HL>
m_calc16_hl_rr.asm:0014 $0012 <SBC> <HL> `,` <SP>
diff m_calc16_hl_rr.bin m_calc16_hl_rr.exp
E: Illegal 16-bit arithmetic instruction. ... OK
N: m_calc16_ix_rr
../vgsasm m_calc16_ix_rr.asm -v
m_calc16_ix_rr.asm:0001 $0000 <ADD> <IX> `,` <BC>
m_calc16_ix_rr.asm:0002 $0002 <ADD> <IX> `,` <DE>
m_calc16_ix_rr.asm:0003 $0004 <ADD> <IX> `,` <IX>
m_calc16_ix_rr.asm:0004 $0006 <ADD> <IX> `,` <SP>
diff m_calc16_ix_rr.bin m_calc16_ix_rr.exp
E: Illegal 16-bit arithmetic instruction. ... OK
N: m_calc16_iy_rr
../vgsasm m_calc16_iy_rr.asm -v
m_calc16_iy_rr.asm:0001 $0000 <ADD> <IY> `,` <BC>
m_calc16_iy_rr.asm:0002 $0002 <ADD> <IY> `,` <DE>
m_calc16_iy_rr.asm:0003 $0004 <ADD> <IY> `,` <IY>
m_calc16_iy_rr.asm:0004 $0006 <ADD> <IY> `,` <SP>
diff m_calc16_iy_rr.bin m_calc16_iy_rr.exp
E: Illegal 16-bit arithmetic instruction. ... OK
E: Illegal 16-bit arithmetic instruction. ... OK
N: m_calc16_osn
../vgsasm m_calc16_osn.asm -v
m_calc16_osn.asm:0001 $0000 <ADD> <HL> `,` 0xFFFF8000
m_calc16_osn.asm:0002 $0007 <ADD> <HL> `,` 0xFFFFFFFF
m_calc16_osn.asm:0003 $000E <ADD> <HL> `,` 0x0
m_calc16_osn.asm:0004 $0015 <ADD> <HL> `,` 0x1
m_calc16_osn.asm:0005 $001C <ADD> <HL> `,` 0x7FFF
m_calc16_osn.asm:0006 $0023 <ADD> <HL> `,` 0x8000
m_calc16_osn.asm:0007 $002A <ADD> <HL> `,` 0xFFFF
m_calc16_osn.asm:0009 $0031 <ADD> <IX> `,` 0xFFFF8000
m_calc16_osn.asm:0010 $0039 <ADD> <IX> `,` 0xFFFFFFFF
m_calc16_osn.asm:0011 $0041 <ADD> <IX> `,` 0x0
m_calc16_osn.asm:0012 $0049 <ADD> <IX> `,` 0x1
m_calc16_osn.asm:0013 $0051 <ADD> <IX> `,` 0x7FFF
m_calc16_osn.asm:0014 $0059 <ADD> <IX> `,` 0x8000
m_calc16_osn.asm:0015 $0061 <ADD> <IX> `,` 0xFFFF
m_calc16_osn.asm:0017 $0069 <ADD> <IX> `,` 0xFFFF8000
m_calc16_osn.asm:0018 $0071 <ADD> <IX> `,` 0xFFFFFFFF
m_calc16_osn.asm:0019 $0079 <ADD> <IX> `,` 0x0
m_calc16_osn.asm:0020 $0081 <ADD> <IX> `,` 0x1
m_calc16_osn.asm:0021 $0089 <ADD> <IX> `,` 0x7FFF
m_calc16_osn.asm:0022 $0091 <ADD> <IX> `,` 0x8000
m_calc16_osn.asm:0023 $0099 <ADD> <IX> `,` 0xFFFF
diff m_calc16_osn.bin m_calc16_osn.exp
E: Numerical range incorrect: -32769 ... OK
E: Numerical range incorrect: 65536 ... OK
E: Illegal 16-bit arithmetic instruction. ... OK
N: m_calc16_osaoa
../vgsasm m_calc16_osaoa.asm -v
m_calc16_osaoa.asm:0001 $0000 <ADD> <HL> `,` _( <IX> )_
m_calc16_osaoa.asm:0002 $0009 <ADD> <HL> `,` _( <IY> )_
diff m_calc16_osaoa.bin m_calc16_osaoa.exp
E: Illegal 16-bit arithmetic instruction. ... OK
N: m_calc16_osaopna
../vgsasm m_calc16_osaopna.asm -v
m_calc16_osaopna.asm:0001 $0000 <ADD> <HL> `,` _( <IX> `-` 0x80 )_
m_calc16_osaopna.asm:0002 $0009 <ADD> <HL> `,` _( <IX> `-` 0x1 )_
m_calc16_osaopna.asm:0003 $0012 <ADD> <HL> `,` _( <IX> `+` 0x0 )_
m_calc16_osaopna.asm:0004 $001B <ADD> <HL> `,` _( <IX> `+` 0x1 )_
m_calc16_osaopna.asm:0005 $0024 <ADD> <HL> `,` _( <IX> `+` 0x7E )_
m_calc16_osaopna.asm:0007 $002D <ADD> <HL> `,` _( <IY> `-` 0x80 )_
m_calc16_osaopna.asm:0008 $0036 <ADD> <HL> `,` _( <IY> `-` 0x1 )_
m_calc16_osaopna.asm:0009 $003F <ADD> <HL> `,` _( <IY> `+` 0x0 )_
m_calc16_osaopna.asm:0010 $0048 <ADD> <HL> `,` _( <IY> `+` 0x1 )_
m_calc16_osaopna.asm:0011 $0051 <ADD> <HL> `,` _( <IY> `+` 0x7E )_
diff m_calc16_osaopna.bin m_calc16_osaopna.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 127 ... OK
E: Illegal 16-bit arithmetic instruction. ... OK
E: Illegal 16-bit arithmetic instruction. ... OK
E: Illegal arithmetic instruction. ... OK
E: Illegal arithmetic instruction. ... OK
N: m_calc_ana
../vgsasm m_calc_ana.asm -v
  m_calc_ana.asm:0001 $0000 <ADD> _( 0x0 )_
  m_calc_ana.asm:0002 $0007 <ADD> _( 0xFFFF )_
  m_calc_ana.asm:0003 $000E <ADC> _( 0x0 )_
  m_calc_ana.asm:0004 $0015 <ADC> _( 0xFFFF )_
  m_calc_ana.asm:0005 $001C <SUB> _( 0x0 )_
  m_calc_ana.asm:0006 $0023 <SUB> _( 0xFFFF )_
  m_calc_ana.asm:0007 $002A <SBC> _( 0x0 )_
  m_calc_ana.asm:0008 $0031 <SBC> _( 0xFFFF )_
diff m_calc_ana.bin m_calc_ana.exp
E: Numerical range incorrect: 65536 ... OK
Testing: mnemonic data
N: m_db
../vgsasm m_db.asm -v
        m_db.asm:0001 $0000 <DB> 0xFFFFFF80 `,` 0xFFFFFFFF `,` 0x0 `,` 0x1 `,` 0xFF
        m_db.asm:0002 $0005 <DB> `Hello, World!`
diff m_db.bin m_db.exp
E: No binary data. ... OK
E: An invalid range of number specified: -129 ... OK
E: An invalid range of number specified: 256 ... OK
E: Unexpected symbols detected in DB: HL ... OK
E: Symbols are not specified as comma-separated: 2 ... OK
E: No symbol is specified after the comma. ... OK
E: String literals are not closed with double quotes. ... OK
N: m_dw
../vgsasm m_dw.asm -v
        m_dw.asm:0001 $0000 LABEL1:
        m_dw.asm:0002 $0000 LABEL2:
        m_dw.asm:0003 $0000 LABEL3@LABEL2:
        m_dw.asm:0005 $0000 <DW> 0xFFFF8000 `,` 0xFFFFFFFF `,` 0x0 `,` 0x1 `,` 0x7FFF `,` 0x8000 `,` 0xFFFF
        m_dw.asm:0006 $000E <DW> `Hello, World!` `,` 0x0
        m_dw.asm:0007 $002A <DW> `LABEL1` `,` `LABEL2` `,` `LABEL3@LABEL2` `,` `LABEL3@LABEL2`
diff m_dw.bin m_dw.exp
E: No binary data. ... OK
E: An invalid range of number specified: -32769 ... OK
E: An invalid range of number specified: 65536 ... OK
E: Unexpected symbols detected in DW: BC ... OK
E: Symbols are not specified as comma-separated: 2 ... OK
E: No symbol is specified after the comma. ... OK
E: String literals are not closed with double quotes. ... OK
E: Label `@LABEL3` is undefined in `LABEL1`. ... OK
Testing: mnemonic djnz
N: m_djnz
../vgsasm m_djnz.asm -v
      m_djnz.asm:0001 $0000 LABEL:
      m_djnz.asm:0002 $0000 <DJNZ> 0xFFFFFF80
      m_djnz.asm:0003 $0002 <DJNZ> 0xFFFFFFFF
      m_djnz.asm:0004 $0004 <DJNZ> 0x0
      m_djnz.asm:0005 $0006 <DJNZ> 0x1
      m_djnz.asm:0006 $0008 <DJNZ> 0x7F
      m_djnz.asm:0007 $000A <DJNZ> `LABEL`
diff m_djnz.bin m_djnz.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Illegal DJNZ instruction. ... OK
E: Illegal DJNZ instruction. ... OK
N: m_ex
../vgsasm m_ex.asm -v
        m_ex.asm:0001 $0000 <EX> <DE> `,` <HL>
        m_ex.asm:0002 $0001 <EX> <AF> `,` <AF'>
diff m_ex.bin m_ex.exp
E: Excessive or insufficient number of operands. ... OK
E: Unexpected operand: B ... OK
E: Incorrect EX syntax. ... OK
E: Incorrect EX syntax. ... OK
N: m_ex_aoaso
../vgsasm m_ex_aoaso.asm -v
  m_ex_aoaso.asm:0001 $0000 <EX> _( <SP> )_ `,` <HL>
  m_ex_aoaso.asm:0002 $0001 <EX> _( <SP> )_ `,` <IX>
  m_ex_aoaso.asm:0003 $0003 <EX> _( <SP> )_ `,` <IY>
diff m_ex_aoaso.bin m_ex_aoaso.exp
E: Unexpected operand: 4660 ... OK
E: Incorrect EX syntax. ... OK
N: m_im
../vgsasm m_im.asm -v
        m_im.asm:0001 $0000 <IM> 0x0
        m_im.asm:0002 $0002 <IM> 0x1
        m_im.asm:0003 $0004 <IM> 0x2
diff m_im.bin m_im.exp
E: Unsupported interrupt mode: 3 ... OK
E: Unexpected operand: A ... OK
N: m_inc_o
../vgsasm m_inc_o.asm -v
     m_inc_o.asm:0001 $0000 <INC> <A>
     m_inc_o.asm:0002 $0001 <INC> <B>
     m_inc_o.asm:0003 $0002 <INC> <C>
     m_inc_o.asm:0004 $0003 <INC> <D>
     m_inc_o.asm:0005 $0004 <INC> <E>
     m_inc_o.asm:0006 $0005 <INC> <H>
     m_inc_o.asm:0007 $0006 <INC> <L>
     m_inc_o.asm:0008 $0007 <INC> <IXH>
     m_inc_o.asm:0009 $0009 <INC> <IXL>
     m_inc_o.asm:0010 $000B <INC> <IYH>
     m_inc_o.asm:0011 $000D <INC> <IYL>
     m_inc_o.asm:0012 $000F <INC> <BC>
     m_inc_o.asm:0013 $0010 <INC> <DE>
     m_inc_o.asm:0014 $0011 <INC> <HL>
     m_inc_o.asm:0015 $0012 <INC> <SP>
     m_inc_o.asm:0016 $0013 <INC> <IX>
     m_inc_o.asm:0017 $0015 <INC> <IY>
diff m_inc_o.bin m_inc_o.exp
E: Illegal INC instruction. ... OK
N: m_inc_aoa
../vgsasm m_inc_aoa.asm -v
   m_inc_aoa.asm:0001 $0000 <INC> _( <HL> )_
   m_inc_aoa.asm:0002 $0001 <INC> _( <IX> )_
   m_inc_aoa.asm:0003 $0004 <INC> _( <IY> )_
diff m_inc_aoa.bin m_inc_aoa.exp
E: Illegal INC instruction. ... OK
N: m_inc_ana
../vgsasm m_inc_ana.asm -v
   m_inc_ana.asm:0001 $0000 <INC> _( 0x1234 )_
diff m_inc_ana.bin m_inc_ana.exp
E: Numerical range incorrect: 65536 ... OK
N: m_inc_aopna
../vgsasm m_inc_aopna.asm -v
 m_inc_aopna.asm:0001 $0000 <INC> _( <IX> `-` 0x80 )_
 m_inc_aopna.asm:0002 $0003 <INC> _( <IX> `-` 0x1 )_
 m_inc_aopna.asm:0003 $0006 <INC> _( <IX> `+` 0x0 )_
 m_inc_aopna.asm:0004 $0009 <INC> _( <IX> `+` 0x1 )_
 m_inc_aopna.asm:0005 $000C <INC> _( <IX> `+` 0x7F )_
 m_inc_aopna.asm:0006 $000F <INC> _( <IY> `-` 0x80 )_
 m_inc_aopna.asm:0007 $0012 <INC> _( <IY> `-` 0x1 )_
 m_inc_aopna.asm:0008 $0015 <INC> _( <IY> `+` 0x0 )_
 m_inc_aopna.asm:0009 $0018 <INC> _( <IY> `+` 0x1 )_
 m_inc_aopna.asm:0010 $001B <INC> _( <IY> `+` 0x7F )_
diff m_inc_aopna.bin m_inc_aopna.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Illegal INC instruction. ... OK
N: m_dec_o
../vgsasm m_dec_o.asm -v
     m_dec_o.asm:0001 $0000 <DEC> <A>
     m_dec_o.asm:0002 $0001 <DEC> <B>
     m_dec_o.asm:0003 $0002 <DEC> <C>
     m_dec_o.asm:0004 $0003 <DEC> <D>
     m_dec_o.asm:0005 $0004 <DEC> <E>
     m_dec_o.asm:0006 $0005 <DEC> <H>
     m_dec_o.asm:0007 $0006 <DEC> <L>
     m_dec_o.asm:0008 $0007 <DEC> <IXH>
     m_dec_o.asm:0009 $0009 <DEC> <IXL>
     m_dec_o.asm:0010 $000B <DEC> <IYH>
     m_dec_o.asm:0011 $000D <DEC> <IYL>
     m_dec_o.asm:0012 $000F <DEC> <BC>
     m_dec_o.asm:0013 $0010 <DEC> <DE>
     m_dec_o.asm:0014 $0011 <DEC> <HL>
     m_dec_o.asm:0015 $0012 <DEC> <SP>
     m_dec_o.asm:0016 $0013 <DEC> <IX>
     m_dec_o.asm:0017 $0015 <DEC> <IY>
diff m_dec_o.bin m_dec_o.exp
E: Illegal DEC instruction. ... OK
N: m_dec_aoa
../vgsasm m_dec_aoa.asm -v
   m_dec_aoa.asm:0001 $0000 <DEC> _( <HL> )_
   m_dec_aoa.asm:0002 $0001 <DEC> _( <IX> )_
   m_dec_aoa.asm:0003 $0004 <DEC> _( <IY> )_
diff m_dec_aoa.bin m_dec_aoa.exp
E: Illegal DEC instruction. ... OK
N: m_dec_ana
../vgsasm m_dec_ana.asm -v
   m_dec_ana.asm:0001 $0000 <DEC> _( 0x1234 )_
diff m_dec_ana.bin m_dec_ana.exp
E: Numerical range incorrect: 65536 ... OK
N: m_dec_aopna
../vgsasm m_dec_aopna.asm -v
 m_dec_aopna.asm:0001 $0000 <DEC> _( <IX> `-` 0x80 )_
 m_dec_aopna.asm:0002 $0003 <DEC> _( <IX> `-` 0x1 )_
 m_dec_aopna.asm:0003 $0006 <DEC> _( <IX> `+` 0x0 )_
 m_dec_aopna.asm:0004 $0009 <DEC> _( <IX> `+` 0x1 )_
 m_dec_aopna.asm:0005 $000C <DEC> _( <IX> `+` 0x7F )_
 m_dec_aopna.asm:0006 $000F <DEC> _( <IY> `-` 0x80 )_
 m_dec_aopna.asm:0007 $0012 <DEC> _( <IY> `-` 0x1 )_
 m_dec_aopna.asm:0008 $0015 <DEC> _( <IY> `+` 0x0 )_
 m_dec_aopna.asm:0009 $0018 <DEC> _( <IY> `+` 0x1 )_
 m_dec_aopna.asm:0010 $001B <DEC> _( <IY> `+` 0x7F )_
diff m_dec_aopna.bin m_dec_aopna.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Illegal DEC instruction. ... OK
N: m_in_osana
../vgsasm m_in_osana.asm -v
  m_in_osana.asm:0001 $0000 <IN> <A> `,` _( 0x0 )_
  m_in_osana.asm:0002 $0002 <IN> <A> `,` _( 0xFF )_
diff m_in_osana.bin m_in_osana.exp
E: Numerical range incorrect: 256 ... OK
N: m_in_osaoa
../vgsasm m_in_osaoa.asm -v
  m_in_osaoa.asm:0001 $0000 <IN> <A> `,` _( <C> )_
  m_in_osaoa.asm:0002 $0002 <IN> <B> `,` _( <C> )_
  m_in_osaoa.asm:0003 $0004 <IN> <C> `,` _( <C> )_
  m_in_osaoa.asm:0004 $0006 <IN> <D> `,` _( <C> )_
  m_in_osaoa.asm:0005 $0008 <IN> <E> `,` _( <C> )_
  m_in_osaoa.asm:0006 $000A <IN> <F> `,` _( <C> )_
  m_in_osaoa.asm:0007 $000C <IN> <H> `,` _( <C> )_
  m_in_osaoa.asm:0008 $000E <IN> <L> `,` _( <C> )_
diff m_in_osaoa.bin m_in_osaoa.exp
E: Illegal IN instruction. ... OK
E: Illegal IN instruction. ... OK
N: m_out_anaso
../vgsasm m_out_anaso.asm -v
 m_out_anaso.asm:0001 $0000 <OUT> _( 0x0 )_ `,` <A>
 m_out_anaso.asm:0002 $0002 <OUT> _( 0xFF )_ `,` <A>
diff m_out_anaso.bin m_out_anaso.exp
E: Numerical range incorrect: 256 ... OK
N: m_out_aoaso
../vgsasm m_out_aoaso.asm -v
 m_out_aoaso.asm:0001 $0000 <OUT> _( <C> )_ `,` <A>
 m_out_aoaso.asm:0002 $0002 <OUT> _( <C> )_ `,` <B>
 m_out_aoaso.asm:0003 $0004 <OUT> _( <C> )_ `,` <C>
 m_out_aoaso.asm:0004 $0006 <OUT> _( <C> )_ `,` <D>
 m_out_aoaso.asm:0005 $0008 <OUT> _( <C> )_ `,` <E>
 m_out_aoaso.asm:0006 $000A <OUT> _( <C> )_ `,` <H>
 m_out_aoaso.asm:0007 $000C <OUT> _( <C> )_ `,` <L>
diff m_out_aoaso.bin m_out_aoaso.exp
E: Illegal OUT instruction. ... OK
N: m_out_osaoa
../vgsasm m_out_osaoa.asm -v
 m_out_osaoa.asm:0001 $0000 <OUT> <F> `,` _( <C> )_
diff m_out_osaoa.bin m_out_osaoa.exp
N: m_out_aoa
../vgsasm m_out_aoa.asm -v
   m_out_aoa.asm:0001 $0000 <OUT> _( <C> )_
diff m_out_aoa.bin m_out_aoa.exp
E: Illegal OUT instruction. ... OK
N: m_jp_n
../vgsasm m_jp_n.asm -v
      m_jp_n.asm:0001 $0000 <JP> 0x0
      m_jp_n.asm:0002 $0003 <JP> 0xFFFF
diff m_jp_n.bin m_jp_n.exp
E: Numerical range incorrect: 65536 ... OK
N: m_jp_l
../vgsasm m_jp_l.asm -v
      m_jp_l.asm:0001 $0000 LABEL:
      m_jp_l.asm:0002 $0000 <NOP>
      m_jp_l.asm:0003 $0001 FOO@LABEL:
      m_jp_l.asm:0004 $0001 <NOP>
      m_jp_l.asm:0006 $0002 <JP> `LABEL`
      m_jp_l.asm:0007 $0005 <JP> `FOO@LABEL`
      m_jp_l.asm:0008 $0008 <JP> `FOO@LABEL`
diff m_jp_l.bin m_jp_l.exp
N: m_jp_osn
../vgsasm m_jp_osn.asm -v
    m_jp_osn.asm:0001 $0000 <JP> <Z> `,` 0x0
    m_jp_osn.asm:0002 $0003 <JP> <Z> `,` 0xFFFF
    m_jp_osn.asm:0003 $0006 <JP> <NZ> `,` 0x1
    m_jp_osn.asm:0004 $0009 <JP> <C> `,` 0x2
    m_jp_osn.asm:0005 $000C <JP> <NC> `,` 0x3
    m_jp_osn.asm:0006 $000F <JP> <PE> `,` 0x4
    m_jp_osn.asm:0007 $0012 <JP> <PO> `,` 0x5
    m_jp_osn.asm:0008 $0015 <JP> <M> `,` 0x6
    m_jp_osn.asm:0009 $0018 <JP> <P> `,` 0x7
diff m_jp_osn.bin m_jp_osn.exp
N: m_jp_osl
../vgsasm m_jp_osl.asm -v
    m_jp_osl.asm:0001 $0000 LABEL:
    m_jp_osl.asm:0002 $0000 <NOP>
    m_jp_osl.asm:0004 $0001 <JP> <NZ> `,` `LABEL`
    m_jp_osl.asm:0005 $0004 <JP> <Z> `,` `LABEL`
    m_jp_osl.asm:0006 $0007 <JP> <NC> `,` `LABEL`
    m_jp_osl.asm:0007 $000A <JP> <C> `,` `LABEL`
    m_jp_osl.asm:0008 $000D <JP> <PO> `,` `LABEL`
    m_jp_osl.asm:0009 $0010 <JP> <PE> `,` `LABEL`
    m_jp_osl.asm:0010 $0013 <JP> <M> `,` `LABEL`
    m_jp_osl.asm:0011 $0016 <JP> <P> `,` `LABEL`
diff m_jp_osl.bin m_jp_osl.exp
N: m_jp_aoa
../vgsasm m_jp_aoa.asm -v
    m_jp_aoa.asm:0001 $0000 <JP> _( <HL> )_
    m_jp_aoa.asm:0002 $0001 <JP> _( <IX> )_
    m_jp_aoa.asm:0003 $0003 <JP> _( <IY> )_
    m_jp_aoa.asm:0004 $0005 <JP> _( <BC> )_
    m_jp_aoa.asm:0005 $0007 <JP> _( <DE> )_
diff m_jp_aoa.bin m_jp_aoa.exp
N: m_jp_o
../vgsasm m_jp_o.asm -v
      m_jp_o.asm:0001 $0000 <JP> <HL>
      m_jp_o.asm:0002 $0001 <JP> <IX>
      m_jp_o.asm:0003 $0003 <JP> <IY>
      m_jp_o.asm:0004 $0005 <JP> <BC>
      m_jp_o.asm:0005 $0007 <JP> <DE>
diff m_jp_o.bin m_jp_o.exp
E: Illegal JP instruction. ... OK
N: m_jr_n
../vgsasm m_jr_n.asm -v
      m_jr_n.asm:0001 $0000 <JR> 0xFFFFFF80
      m_jr_n.asm:0002 $0002 <JR> 0x7F
diff m_jr_n.bin m_jr_n.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
N: m_jr_l
../vgsasm m_jr_l.asm -v
      m_jr_l.asm:0001 $0000 LABEL1:
      m_jr_l.asm:0002 $0000 <NOP>
      m_jr_l.asm:0003 $0001 LABEL2:
      m_jr_l.asm:0004 $0001 <NOP>
      m_jr_l.asm:0005 $0002 FOO@LABEL2:
      m_jr_l.asm:0006 $0002 <NOP>
      m_jr_l.asm:0008 $0003 <JR> `LABEL1`
      m_jr_l.asm:0009 $0005 <JR> `LABEL2`
      m_jr_l.asm:0010 $0007 <JR> `FOO@LABEL2`
      m_jr_l.asm:0011 $0009 <JR> `FOO@LABEL2`
diff m_jr_l.bin m_jr_l.exp
N: m_jr_osn
../vgsasm m_jr_osn.asm -v
    m_jr_osn.asm:0001 $0000 <JR> <NZ> `,` 0xFFFFFF80
    m_jr_osn.asm:0002 $0002 <JR> <Z> `,` 0xFFFFFFFF
    m_jr_osn.asm:0003 $0004 <JR> <NC> `,` 0x1
    m_jr_osn.asm:0004 $0006 <JR> <C> `,` 0x7F
diff m_jr_osn.bin m_jr_osn.exp
E: Invalid condition: PE ... OK
N: m_jr_osl
../vgsasm m_jr_osl.asm -v
    m_jr_osl.asm:0001 $0000 LABEL:
    m_jr_osl.asm:0003 $0000 <JR> <NZ> `,` `LABEL`
    m_jr_osl.asm:0004 $0002 <JR> <Z> `,` `LABEL`
    m_jr_osl.asm:0005 $0004 <JR> <NC> `,` `LABEL`
    m_jr_osl.asm:0006 $0006 <JR> <C> `,` `LABEL`
diff m_jr_osl.bin m_jr_osl.exp
E: Invalid condition: PO ... OK
E: Illegal JR instruction. ... OK
N: m_rst
../vgsasm m_rst.asm -v
       m_rst.asm:0001 $0000 <RST> 0x0
       m_rst.asm:0002 $0001 <RST> 0x1
       m_rst.asm:0003 $0002 <RST> 0x2
       m_rst.asm:0004 $0003 <RST> 0x3
       m_rst.asm:0005 $0004 <RST> 0x4
       m_rst.asm:0006 $0005 <RST> 0x5
       m_rst.asm:0007 $0006 <RST> 0x6
       m_rst.asm:0008 $0007 <RST> 0x7
       m_rst.asm:0010 $0008 <RST> 0x0
       m_rst.asm:0011 $0009 <RST> 0x8
       m_rst.asm:0012 $000A <RST> 0x10
       m_rst.asm:0013 $000B <RST> 0x18
       m_rst.asm:0014 $000C <RST> 0x20
       m_rst.asm:0015 $000D <RST> 0x28
       m_rst.asm:0016 $000E <RST> 0x30
       m_rst.asm:0017 $000F <RST> 0x38
diff m_rst.bin m_rst.exp
E: Illegal RST instruction. ... OK
N: m_shift_o
../vgsasm m_shift_o.asm -v
   m_shift_o.asm:0001 $0000 <SLA> <A>
   m_shift_o.asm:0002 $0002 <SLA> <B>
   m_shift_o.asm:0003 $0004 <SLA> <C>
   m_shift_o.asm:0004 $0006 <SLA> <D>
   m_shift_o.asm:0005 $0008 <SLA> <E>
   m_shift_o.asm:0006 $000A <SLA> <H>
   m_shift_o.asm:0007 $000C <SLA> <L>
   m_shift_o.asm:0009 $000E <SLL> <A>
   m_shift_o.asm:0010 $0010 <SLL> <B>
   m_shift_o.asm:0011 $0012 <SLL> <C>
   m_shift_o.asm:0012 $0014 <SLL> <D>
   m_shift_o.asm:0013 $0016 <SLL> <E>
   m_shift_o.asm:0014 $0018 <SLL> <H>
   m_shift_o.asm:0015 $001A <SLL> <L>
   m_shift_o.asm:0017 $001C <SRA> <A>
   m_shift_o.asm:0018 $001E <SRA> <B>
   m_shift_o.asm:0019 $0020 <SRA> <C>
   m_shift_o.asm:0020 $0022 <SRA> <D>
   m_shift_o.asm:0021 $0024 <SRA> <E>
   m_shift_o.asm:0022 $0026 <SRA> <H>
   m_shift_o.asm:0023 $0028 <SRA> <L>
   m_shift_o.asm:0025 $002A <SRL> <A>
   m_shift_o.asm:0026 $002C <SRL> <B>
   m_shift_o.asm:0027 $002E <SRL> <C>
   m_shift_o.asm:0028 $0030 <SRL> <D>
   m_shift_o.asm:0029 $0032 <SRL> <E>
   m_shift_o.asm:0030 $0034 <SRL> <H>
   m_shift_o.asm:0031 $0036 <SRL> <L>
   m_shift_o.asm:0033 $0038 <RLC> <A>
   m_shift_o.asm:0034 $003A <RLC> <B>
   m_shift_o.asm:0035 $003C <RLC> <C>
   m_shift_o.asm:0036 $003E <RLC> <D>
   m_shift_o.asm:0037 $0040 <RLC> <E>
   m_shift_o.asm:0038 $0042 <RLC> <H>
   m_shift_o.asm:0039 $0044 <RLC> <L>
   m_shift_o.asm:0041 $0046 <RL> <A>
   m_shift_o.asm:0042 $0048 <RL> <B>
   m_shift_o.asm:0043 $004A <RL> <C>
   m_shift_o.asm:0044 $004C <RL> <D>
   m_shift_o.asm:0045 $004E <RL> <E>
   m_shift_o.asm:0046 $0050 <RL> <H>
   m_shift_o.asm:0047 $0052 <RL> <L>
   m_shift_o.asm:0049 $0054 <RRC> <A>
   m_shift_o.asm:0050 $0056 <RRC> <B>
   m_shift_o.asm:0051 $0058 <RRC> <C>
   m_shift_o.asm:0052 $005A <RRC> <D>
   m_shift_o.asm:0053 $005C <RRC> <E>
   m_shift_o.asm:0054 $005E <RRC> <H>
   m_shift_o.asm:0055 $0060 <RRC> <L>
   m_shift_o.asm:0057 $0062 <RR> <A>
   m_shift_o.asm:0058 $0064 <RR> <B>
   m_shift_o.asm:0059 $0066 <RR> <C>
   m_shift_o.asm:0060 $0068 <RR> <D>
   m_shift_o.asm:0061 $006A <RR> <E>
   m_shift_o.asm:0062 $006C <RR> <H>
   m_shift_o.asm:0063 $006E <RR> <L>
   m_shift_o.asm:0065 $0070 <SL> <A>
   m_shift_o.asm:0066 $0072 <SL> <B>
   m_shift_o.asm:0067 $0074 <SL> <C>
   m_shift_o.asm:0068 $0076 <SL> <D>
   m_shift_o.asm:0069 $0078 <SL> <E>
   m_shift_o.asm:0070 $007A <SL> <H>
   m_shift_o.asm:0071 $007C <SL> <L>
   m_shift_o.asm:0073 $007E <SR> <A>
   m_shift_o.asm:0074 $0080 <SR> <B>
   m_shift_o.asm:0075 $0082 <SR> <C>
   m_shift_o.asm:0076 $0084 <SR> <D>
   m_shift_o.asm:0077 $0086 <SR> <E>
   m_shift_o.asm:0078 $0088 <SR> <H>
   m_shift_o.asm:0079 $008A <SR> <L>
diff m_shift_o.bin m_shift_o.exp
E: Illegal shift/rotate instruction. ... OK
N: m_shift_osn
../vgsasm m_shift_osn.asm -v
 m_shift_osn.asm:0001 $0000 <SL> <A> `,` 0x5
diff m_shift_osn.bin m_shift_osn.exp
N: m_shift_aoa
../vgsasm m_shift_aoa.asm -v
 m_shift_aoa.asm:0001 $0000 <SLA> _( <HL> )_
 m_shift_aoa.asm:0002 $0002 <SLA> _( <IX> )_
 m_shift_aoa.asm:0003 $0006 <SLA> _( <IY> )_
 m_shift_aoa.asm:0005 $000A <SLL> _( <HL> )_
 m_shift_aoa.asm:0006 $000C <SLL> _( <IX> )_
 m_shift_aoa.asm:0007 $0010 <SLL> _( <IY> )_
 m_shift_aoa.asm:0009 $0014 <SRA> _( <HL> )_
 m_shift_aoa.asm:0010 $0016 <SRA> _( <IX> )_
 m_shift_aoa.asm:0011 $001A <SRA> _( <IY> )_
 m_shift_aoa.asm:0013 $001E <SRL> _( <HL> )_
 m_shift_aoa.asm:0014 $0020 <SRL> _( <IX> )_
 m_shift_aoa.asm:0015 $0024 <SRL> _( <IY> )_
 m_shift_aoa.asm:0017 $0028 <RLC> _( <HL> )_
 m_shift_aoa.asm:0018 $002A <RLC> _( <IX> )_
 m_shift_aoa.asm:0019 $002E <RLC> _( <IY> )_
 m_shift_aoa.asm:0021 $0032 <RL> _( <HL> )_
 m_shift_aoa.asm:0022 $0034 <RL> _( <IX> )_
 m_shift_aoa.asm:0023 $0038 <RL> _( <IY> )_
 m_shift_aoa.asm:0025 $003C <RRC> _( <HL> )_
 m_shift_aoa.asm:0026 $003E <RRC> _( <IX> )_
 m_shift_aoa.asm:0027 $0042 <RRC> _( <IY> )_
 m_shift_aoa.asm:0029 $0046 <RR> _( <HL> )_
 m_shift_aoa.asm:0030 $0048 <RR> _( <IX> )_
 m_shift_aoa.asm:0031 $004C <RR> _( <IY> )_
 m_shift_aoa.asm:0033 $0050 <SL> _( <HL> )_
 m_shift_aoa.asm:0034 $0052 <SL> _( <IX> )_
 m_shift_aoa.asm:0035 $0056 <SL> _( <IY> )_
 m_shift_aoa.asm:0037 $005A <SR> _( <HL> )_
 m_shift_aoa.asm:0038 $005C <SR> _( <IX> )_
 m_shift_aoa.asm:0039 $0060 <SR> _( <IY> )_
diff m_shift_aoa.bin m_shift_aoa.exp
E: Illegal shift/rotate instruction. ... OK
N: m_shift_aoasn
../vgsasm m_shift_aoasn.asm -v
m_shift_aoasn.asm:0001 $0000 <SLA> _( <HL> )_ `,` 0x3
diff m_shift_aoasn.bin m_shift_aoasn.exp
N: m_shift_aopna
../vgsasm m_shift_aopna.asm -v
m_shift_aopna.asm:0001 $0000 <SLA> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0002 $0004 <SLA> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0004 $0008 <SLL> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0005 $000C <SLL> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0007 $0010 <SRA> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0008 $0014 <SRA> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0010 $0018 <SRL> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0011 $001C <SRL> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0013 $0020 <RLC> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0014 $0024 <RLC> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0016 $0028 <RL> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0017 $002C <RL> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0019 $0030 <RRC> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0020 $0034 <RRC> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0022 $0038 <RR> _( <IX> `-` 0x80 )_
m_shift_aopna.asm:0023 $003C <RR> _( <IY> `+` 0x7F )_
m_shift_aopna.asm:0025 $0040 <SL> _( <IX> `+` 0x7F )_
m_shift_aopna.asm:0026 $0044 <SL> _( <IY> `-` 0x80 )_
m_shift_aopna.asm:0028 $0048 <SR> _( <IX> `+` 0x7F )_
m_shift_aopna.asm:0029 $004C <SR> _( <IY> `-` 0x80 )_
diff m_shift_aopna.bin m_shift_aopna.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Illegal shift/rotate instruction. ... OK
N: m_shift_aopna_o
../vgsasm m_shift_aopna_o.asm -v
m_shift_aopna_o.asm:0001 $0000 <RLC> _( <IX> `+` 0x0 )_ `&` <A>
m_shift_aopna_o.asm:0002 $0004 <RLC> _( <IX> `+` 0x0 )_ `&` <B>
m_shift_aopna_o.asm:0003 $0008 <RLC> _( <IX> `+` 0x0 )_ `&` <C>
m_shift_aopna_o.asm:0004 $000C <RLC> _( <IX> `+` 0x0 )_ `&` <D>
m_shift_aopna_o.asm:0005 $0010 <RLC> _( <IX> `+` 0x0 )_ `&` <E>
m_shift_aopna_o.asm:0006 $0014 <RLC> _( <IX> `+` 0x0 )_ `&` <F>
m_shift_aopna_o.asm:0007 $0018 <RLC> _( <IX> `+` 0x0 )_ `&` <H>
m_shift_aopna_o.asm:0008 $001C <RLC> _( <IX> `+` 0x0 )_ `&` <L>
m_shift_aopna_o.asm:0010 $0020 <RRC> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0011 $0024 <RL> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0012 $0028 <RR> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0013 $002C <SLA> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0014 $0030 <SRA> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0015 $0034 <SLL> _( <IX> `+` 0x1 )_ `&` <B>
m_shift_aopna_o.asm:0016 $0038 <SRL> _( <IX> `+` 0x1 )_ `&` <B>
diff m_shift_aopna_o.bin m_shift_aopna_o.exp
E: Illegal shift/rotate instruction. ... OK
N: m_push_o
../vgsasm m_push_o.asm -v
    m_push_o.asm:0001 $0000 <PUSH> <AF>
    m_push_o.asm:0002 $0001 <PUSH> <BC>
    m_push_o.asm:0003 $0002 <PUSH> <DE>
    m_push_o.asm:0004 $0003 <PUSH> <HL>
    m_push_o.asm:0005 $0004 <PUSH> <IX>
    m_push_o.asm:0006 $0006 <PUSH> <IY>
diff m_push_o.bin m_push_o.exp
E: Unsupported PUSH operand: A ... OK
E: Excessive or insufficient number of operands. ... OK
N: m_pop_o
../vgsasm m_pop_o.asm -v
     m_pop_o.asm:0001 $0000 <POP> <AF>
     m_pop_o.asm:0002 $0001 <POP> <BC>
     m_pop_o.asm:0003 $0002 <POP> <DE>
     m_pop_o.asm:0004 $0003 <POP> <HL>
     m_pop_o.asm:0005 $0004 <POP> <IX>
     m_pop_o.asm:0006 $0006 <POP> <IY>
diff m_pop_o.bin m_pop_o.exp
E: Unsupported POP operand: SP ... OK
E: Excessive or insufficient number of operands. ... OK
N: m_call_n
../vgsasm m_call_n.asm -v
    m_call_n.asm:0001 $0000 <CALL> 0x0
    m_call_n.asm:0002 $0003 <CALL> 0xFFFF
diff m_call_n.bin m_call_n.exp
E: Numerical range incorrect: 65536 ... OK
N: m_call_l
../vgsasm m_call_l.asm -v
    m_call_l.asm:0001 $0000 LABEL1:
    m_call_l.asm:0002 $0000 LABEL2:
    m_call_l.asm:0003 $0000 LABEL3@LABEL2:
    m_call_l.asm:0005 $0000 <CALL> `LABEL1`
    m_call_l.asm:0006 $0003 <CALL> `LABEL2`
    m_call_l.asm:0007 $0006 <CALL> `LABEL3@LABEL2`
    m_call_l.asm:0008 $0009 <CALL> `LABEL3@LABEL2`
diff m_call_l.bin m_call_l.exp
N: m_call_osn
../vgsasm m_call_osn.asm -v
  m_call_osn.asm:0001 $0000 <CALL> <NZ> `,` 0x0
  m_call_osn.asm:0002 $0003 <CALL> <Z> `,` 0x1
  m_call_osn.asm:0003 $0006 <CALL> <NC> `,` 0x7FFF
  m_call_osn.asm:0004 $0009 <CALL> <C> `,` 0x8000
  m_call_osn.asm:0005 $000C <CALL> <PO> `,` 0xFFFF
  m_call_osn.asm:0006 $000F <CALL> <PE> `,` 0x0
  m_call_osn.asm:0007 $0012 <CALL> <M> `,` 0x64
  m_call_osn.asm:0008 $0015 <CALL> <P> `,` 0xC8
diff m_call_osn.bin m_call_osn.exp
E: Invalid condition: A ... OK
E: Numerical range incorrect: 65536 ... OK
N: m_call_osl
../vgsasm m_call_osl.asm -v
  m_call_osl.asm:0001 $0000 LABEL:
  m_call_osl.asm:0002 $0000 LABEL1:
  m_call_osl.asm:0003 $0000 LABEL2:
  m_call_osl.asm:0004 $0000 LABEL3@LABEL2:
  m_call_osl.asm:0006 $0000 <CALL> <NZ> `,` `LABEL1`
  m_call_osl.asm:0007 $0003 <CALL> <Z> `,` `LABEL2`
  m_call_osl.asm:0008 $0006 <CALL> <NC> `,` `LABEL3@LABEL2`
  m_call_osl.asm:0009 $0009 <CALL> <C> `,` `LABEL`
  m_call_osl.asm:0010 $000C <CALL> <PO> `,` `LABEL1`
  m_call_osl.asm:0011 $000F <CALL> <PE> `,` `LABEL2`
  m_call_osl.asm:0012 $0012 <CALL> <M> `,` `LABEL3@LABEL2`
  m_call_osl.asm:0013 $0015 <CALL> <P> `,` `LABEL3@LABEL2`
diff m_call_osl.bin m_call_osl.exp
E: Illegal CALL instruction. ... OK
N: m_hage_oso_hl
../vgsasm m_hage_oso_hl.asm -v
m_hage_oso_hl.asm:0001 $0000 <MUL> <HL> `,` <A>
m_hage_oso_hl.asm:0002 $0009 <MUL> <HL> `,` <B>
m_hage_oso_hl.asm:0003 $0012 <MUL> <HL> `,` <C>
m_hage_oso_hl.asm:0004 $0018 <MUL> <HL> `,` <D>
m_hage_oso_hl.asm:0005 $0021 <MUL> <HL> `,` <E>
m_hage_oso_hl.asm:0007 $002A <MULS> <HL> `,` <A>
m_hage_oso_hl.asm:0008 $0033 <MULS> <HL> `,` <B>
m_hage_oso_hl.asm:0009 $003C <MULS> <HL> `,` <C>
m_hage_oso_hl.asm:0010 $0042 <MULS> <HL> `,` <D>
m_hage_oso_hl.asm:0011 $004B <MULS> <HL> `,` <E>
m_hage_oso_hl.asm:0013 $0054 <DIV> <HL> `,` <A>
m_hage_oso_hl.asm:0014 $005D <DIV> <HL> `,` <B>
m_hage_oso_hl.asm:0015 $0066 <DIV> <HL> `,` <C>
m_hage_oso_hl.asm:0016 $006C <DIV> <HL> `,` <D>
m_hage_oso_hl.asm:0017 $0075 <DIV> <HL> `,` <E>
m_hage_oso_hl.asm:0019 $007E <DIVS> <HL> `,` <A>
m_hage_oso_hl.asm:0020 $0087 <DIVS> <HL> `,` <B>
m_hage_oso_hl.asm:0021 $0090 <DIVS> <HL> `,` <C>
m_hage_oso_hl.asm:0022 $0096 <DIVS> <HL> `,` <D>
m_hage_oso_hl.asm:0023 $009F <DIVS> <HL> `,` <E>
m_hage_oso_hl.asm:0025 $00A8 <MOD> <HL> `,` <A>
m_hage_oso_hl.asm:0026 $00B1 <MOD> <HL> `,` <B>
m_hage_oso_hl.asm:0027 $00BA <MOD> <HL> `,` <C>
m_hage_oso_hl.asm:0028 $00C0 <MOD> <HL> `,` <D>
m_hage_oso_hl.asm:0029 $00C9 <MOD> <HL> `,` <E>
diff m_hage_oso_hl.bin m_hage_oso_hl.exp
N: m_hage_oso_a
../vgsasm m_hage_oso_a.asm -v
m_hage_oso_a.asm:0001 $0000 <MUL> <A> `,` <A>
m_hage_oso_a.asm:0002 $0009 <MUL> <A> `,` <B>
m_hage_oso_a.asm:0003 $0012 <MUL> <A> `,` <C>
m_hage_oso_a.asm:0004 $001B <MUL> <A> `,` <D>
m_hage_oso_a.asm:0005 $0024 <MUL> <A> `,` <E>
m_hage_oso_a.asm:0007 $002D <MULS> <A> `,` <A>
m_hage_oso_a.asm:0008 $0036 <MULS> <A> `,` <B>
m_hage_oso_a.asm:0009 $003F <MULS> <A> `,` <C>
m_hage_oso_a.asm:0010 $0048 <MULS> <A> `,` <D>
m_hage_oso_a.asm:0011 $0051 <MULS> <A> `,` <E>
m_hage_oso_a.asm:0013 $005A <DIV> <A> `,` <A>
m_hage_oso_a.asm:0014 $0063 <DIV> <A> `,` <B>
m_hage_oso_a.asm:0015 $006C <DIV> <A> `,` <C>
m_hage_oso_a.asm:0016 $0075 <DIV> <A> `,` <D>
m_hage_oso_a.asm:0017 $007E <DIV> <A> `,` <E>
m_hage_oso_a.asm:0019 $0087 <DIVS> <A> `,` <A>
m_hage_oso_a.asm:0020 $0090 <DIVS> <A> `,` <B>
m_hage_oso_a.asm:0021 $0099 <DIVS> <A> `,` <C>
m_hage_oso_a.asm:0022 $00A2 <DIVS> <A> `,` <D>
m_hage_oso_a.asm:0023 $00AB <DIVS> <A> `,` <E>
m_hage_oso_a.asm:0025 $00B4 <MOD> <A> `,` <A>
m_hage_oso_a.asm:0026 $00BD <MOD> <A> `,` <B>
m_hage_oso_a.asm:0027 $00C6 <MOD> <A> `,` <C>
m_hage_oso_a.asm:0028 $00CF <MOD> <A> `,` <D>
m_hage_oso_a.asm:0029 $00D8 <MOD> <A> `,` <E>
diff m_hage_oso_a.bin m_hage_oso_a.exp
N: m_hage_oso_b
../vgsasm m_hage_oso_b.asm -v
m_hage_oso_b.asm:0001 $0000 <MUL> <B> `,` <A>
m_hage_oso_b.asm:0002 $000B <MUL> <B> `,` <B>
m_hage_oso_b.asm:0003 $0016 <MUL> <B> `,` <C>
m_hage_oso_b.asm:0004 $0021 <MUL> <B> `,` <D>
m_hage_oso_b.asm:0005 $002C <MUL> <B> `,` <E>
m_hage_oso_b.asm:0007 $0037 <MULS> <B> `,` <A>
m_hage_oso_b.asm:0008 $0042 <MULS> <B> `,` <B>
m_hage_oso_b.asm:0009 $004D <MULS> <B> `,` <C>
m_hage_oso_b.asm:0010 $0058 <MULS> <B> `,` <D>
m_hage_oso_b.asm:0011 $0063 <MULS> <B> `,` <E>
m_hage_oso_b.asm:0013 $006E <DIV> <B> `,` <A>
m_hage_oso_b.asm:0014 $0079 <DIV> <B> `,` <B>
m_hage_oso_b.asm:0015 $0084 <DIV> <B> `,` <C>
m_hage_oso_b.asm:0016 $008F <DIV> <B> `,` <D>
m_hage_oso_b.asm:0017 $009A <DIV> <B> `,` <E>
m_hage_oso_b.asm:0019 $00A5 <DIVS> <B> `,` <A>
m_hage_oso_b.asm:0020 $00B0 <DIVS> <B> `,` <B>
m_hage_oso_b.asm:0021 $00BB <DIVS> <B> `,` <C>
m_hage_oso_b.asm:0022 $00C6 <DIVS> <B> `,` <D>
m_hage_oso_b.asm:0023 $00D1 <DIVS> <B> `,` <E>
m_hage_oso_b.asm:0025 $00DC <MOD> <B> `,` <A>
m_hage_oso_b.asm:0026 $00E7 <MOD> <B> `,` <B>
m_hage_oso_b.asm:0027 $00F2 <MOD> <B> `,` <C>
m_hage_oso_b.asm:0028 $00FD <MOD> <B> `,` <D>
m_hage_oso_b.asm:0029 $0108 <MOD> <B> `,` <E>
diff m_hage_oso_b.bin m_hage_oso_b.exp
N: m_hage_oso_c
../vgsasm m_hage_oso_c.asm -v
m_hage_oso_c.asm:0001 $0000 <MUL> <C> `,` <A>
m_hage_oso_c.asm:0002 $000B <MUL> <C> `,` <B>
m_hage_oso_c.asm:0003 $0016 <MUL> <C> `,` <C>
m_hage_oso_c.asm:0004 $0021 <MUL> <C> `,` <D>
m_hage_oso_c.asm:0005 $002C <MUL> <C> `,` <E>
m_hage_oso_c.asm:0007 $0037 <MULS> <C> `,` <A>
m_hage_oso_c.asm:0008 $0042 <MULS> <C> `,` <B>
m_hage_oso_c.asm:0009 $004D <MULS> <C> `,` <C>
m_hage_oso_c.asm:0010 $0058 <MULS> <C> `,` <D>
m_hage_oso_c.asm:0011 $0063 <MULS> <C> `,` <E>
m_hage_oso_c.asm:0013 $006E <DIV> <C> `,` <A>
m_hage_oso_c.asm:0014 $0079 <DIV> <C> `,` <B>
m_hage_oso_c.asm:0015 $0084 <DIV> <C> `,` <C>
m_hage_oso_c.asm:0016 $008F <DIV> <C> `,` <D>
m_hage_oso_c.asm:0017 $009A <DIV> <C> `,` <E>
m_hage_oso_c.asm:0019 $00A5 <DIVS> <C> `,` <A>
m_hage_oso_c.asm:0020 $00B0 <DIVS> <C> `,` <B>
m_hage_oso_c.asm:0021 $00BB <DIVS> <C> `,` <C>
m_hage_oso_c.asm:0022 $00C6 <DIVS> <C> `,` <D>
m_hage_oso_c.asm:0023 $00D1 <DIVS> <C> `,` <E>
m_hage_oso_c.asm:0025 $00DC <MOD> <C> `,` <A>
m_hage_oso_c.asm:0026 $00E7 <MOD> <C> `,` <B>
m_hage_oso_c.asm:0027 $00F2 <MOD> <C> `,` <C>
m_hage_oso_c.asm:0028 $00FD <MOD> <C> `,` <D>
m_hage_oso_c.asm:0029 $0108 <MOD> <C> `,` <E>
diff m_hage_oso_c.bin m_hage_oso_c.exp
N: m_hage_oso_d
../vgsasm m_hage_oso_d.asm -v
m_hage_oso_d.asm:0001 $0000 <MUL> <D> `,` <A>
m_hage_oso_d.asm:0002 $000B <MUL> <D> `,` <B>
m_hage_oso_d.asm:0003 $0016 <MUL> <D> `,` <C>
m_hage_oso_d.asm:0004 $0021 <MUL> <D> `,` <D>
m_hage_oso_d.asm:0005 $002C <MUL> <D> `,` <E>
m_hage_oso_d.asm:0007 $0037 <MULS> <D> `,` <A>
m_hage_oso_d.asm:0008 $0042 <MULS> <D> `,` <B>
m_hage_oso_d.asm:0009 $004D <MULS> <D> `,` <C>
m_hage_oso_d.asm:0010 $0058 <MULS> <D> `,` <D>
m_hage_oso_d.asm:0011 $0063 <MULS> <D> `,` <E>
m_hage_oso_d.asm:0013 $006E <DIV> <D> `,` <A>
m_hage_oso_d.asm:0014 $0079 <DIV> <D> `,` <B>
m_hage_oso_d.asm:0015 $0084 <DIV> <D> `,` <C>
m_hage_oso_d.asm:0016 $008F <DIV> <D> `,` <D>
m_hage_oso_d.asm:0017 $009A <DIV> <D> `,` <E>
m_hage_oso_d.asm:0019 $00A5 <DIVS> <D> `,` <A>
m_hage_oso_d.asm:0020 $00B0 <DIVS> <D> `,` <B>
m_hage_oso_d.asm:0021 $00BB <DIVS> <D> `,` <C>
m_hage_oso_d.asm:0022 $00C6 <DIVS> <D> `,` <D>
m_hage_oso_d.asm:0023 $00D1 <DIVS> <D> `,` <E>
m_hage_oso_d.asm:0025 $00DC <MOD> <D> `,` <A>
m_hage_oso_d.asm:0026 $00E7 <MOD> <D> `,` <B>
m_hage_oso_d.asm:0027 $00F2 <MOD> <D> `,` <C>
m_hage_oso_d.asm:0028 $00FD <MOD> <D> `,` <D>
m_hage_oso_d.asm:0029 $0108 <MOD> <D> `,` <E>
diff m_hage_oso_d.bin m_hage_oso_d.exp
N: m_hage_oso_e
../vgsasm m_hage_oso_e.asm -v
m_hage_oso_e.asm:0001 $0000 <MUL> <E> `,` <A>
m_hage_oso_e.asm:0002 $000B <MUL> <E> `,` <B>
m_hage_oso_e.asm:0003 $0016 <MUL> <E> `,` <C>
m_hage_oso_e.asm:0004 $0021 <MUL> <E> `,` <D>
m_hage_oso_e.asm:0005 $002C <MUL> <E> `,` <E>
m_hage_oso_e.asm:0007 $0037 <MULS> <E> `,` <A>
m_hage_oso_e.asm:0008 $0042 <MULS> <E> `,` <B>
m_hage_oso_e.asm:0009 $004D <MULS> <E> `,` <C>
m_hage_oso_e.asm:0010 $0058 <MULS> <E> `,` <D>
m_hage_oso_e.asm:0011 $0063 <MULS> <E> `,` <E>
m_hage_oso_e.asm:0013 $006E <DIV> <E> `,` <A>
m_hage_oso_e.asm:0014 $0079 <DIV> <E> `,` <B>
m_hage_oso_e.asm:0015 $0084 <DIV> <E> `,` <C>
m_hage_oso_e.asm:0016 $008F <DIV> <E> `,` <D>
m_hage_oso_e.asm:0017 $009A <DIV> <E> `,` <E>
m_hage_oso_e.asm:0019 $00A5 <DIVS> <E> `,` <A>
m_hage_oso_e.asm:0020 $00B0 <DIVS> <E> `,` <B>
m_hage_oso_e.asm:0021 $00BB <DIVS> <E> `,` <C>
m_hage_oso_e.asm:0022 $00C6 <DIVS> <E> `,` <D>
m_hage_oso_e.asm:0023 $00D1 <DIVS> <E> `,` <E>
m_hage_oso_e.asm:0025 $00DC <MOD> <E> `,` <A>
m_hage_oso_e.asm:0026 $00E7 <MOD> <E> `,` <B>
m_hage_oso_e.asm:0027 $00F2 <MOD> <E> `,` <C>
m_hage_oso_e.asm:0028 $00FD <MOD> <E> `,` <D>
m_hage_oso_e.asm:0029 $0108 <MOD> <E> `,` <E>
diff m_hage_oso_e.bin m_hage_oso_e.exp
N: m_hage_oso_h
../vgsasm m_hage_oso_h.asm -v
m_hage_oso_h.asm:0001 $0000 <MUL> <H> `,` <A>
m_hage_oso_h.asm:0002 $000B <MUL> <H> `,` <B>
m_hage_oso_h.asm:0003 $0016 <MUL> <H> `,` <C>
m_hage_oso_h.asm:0004 $0021 <MUL> <H> `,` <D>
m_hage_oso_h.asm:0005 $002C <MUL> <H> `,` <E>
m_hage_oso_h.asm:0007 $0037 <MULS> <H> `,` <A>
m_hage_oso_h.asm:0008 $0042 <MULS> <H> `,` <B>
m_hage_oso_h.asm:0009 $004D <MULS> <H> `,` <C>
m_hage_oso_h.asm:0010 $0058 <MULS> <H> `,` <D>
m_hage_oso_h.asm:0011 $0063 <MULS> <H> `,` <E>
m_hage_oso_h.asm:0013 $006E <DIV> <H> `,` <A>
m_hage_oso_h.asm:0014 $0079 <DIV> <H> `,` <B>
m_hage_oso_h.asm:0015 $0084 <DIV> <H> `,` <C>
m_hage_oso_h.asm:0016 $008F <DIV> <H> `,` <D>
m_hage_oso_h.asm:0017 $009A <DIV> <H> `,` <E>
m_hage_oso_h.asm:0019 $00A5 <DIVS> <H> `,` <A>
m_hage_oso_h.asm:0020 $00B0 <DIVS> <H> `,` <B>
m_hage_oso_h.asm:0021 $00BB <DIVS> <H> `,` <C>
m_hage_oso_h.asm:0022 $00C6 <DIVS> <H> `,` <D>
m_hage_oso_h.asm:0023 $00D1 <DIVS> <H> `,` <E>
m_hage_oso_h.asm:0025 $00DC <MOD> <H> `,` <A>
m_hage_oso_h.asm:0026 $00E7 <MOD> <H> `,` <B>
m_hage_oso_h.asm:0027 $00F2 <MOD> <H> `,` <C>
m_hage_oso_h.asm:0028 $00FD <MOD> <H> `,` <D>
m_hage_oso_h.asm:0029 $0108 <MOD> <H> `,` <E>
diff m_hage_oso_h.bin m_hage_oso_h.exp
N: m_hage_oso_l
../vgsasm m_hage_oso_l.asm -v
m_hage_oso_l.asm:0001 $0000 <MUL> <L> `,` <A>
m_hage_oso_l.asm:0002 $000C <MUL> <L> `,` <B>
m_hage_oso_l.asm:0003 $0018 <MUL> <L> `,` <C>
m_hage_oso_l.asm:0004 $0024 <MUL> <L> `,` <D>
m_hage_oso_l.asm:0005 $0030 <MUL> <L> `,` <E>
m_hage_oso_l.asm:0007 $003C <MULS> <L> `,` <A>
m_hage_oso_l.asm:0008 $0048 <MULS> <L> `,` <B>
m_hage_oso_l.asm:0009 $0054 <MULS> <L> `,` <C>
m_hage_oso_l.asm:0010 $0060 <MULS> <L> `,` <D>
m_hage_oso_l.asm:0011 $006C <MULS> <L> `,` <E>
m_hage_oso_l.asm:0013 $0078 <DIV> <L> `,` <A>
m_hage_oso_l.asm:0014 $0084 <DIV> <L> `,` <B>
m_hage_oso_l.asm:0015 $0090 <DIV> <L> `,` <C>
m_hage_oso_l.asm:0016 $009C <DIV> <L> `,` <D>
m_hage_oso_l.asm:0017 $00A8 <DIV> <L> `,` <E>
m_hage_oso_l.asm:0019 $00B4 <DIVS> <L> `,` <A>
m_hage_oso_l.asm:0020 $00C0 <DIVS> <L> `,` <B>
m_hage_oso_l.asm:0021 $00CC <DIVS> <L> `,` <C>
m_hage_oso_l.asm:0022 $00D8 <DIVS> <L> `,` <D>
m_hage_oso_l.asm:0023 $00E4 <DIVS> <L> `,` <E>
m_hage_oso_l.asm:0025 $00F0 <MOD> <L> `,` <A>
m_hage_oso_l.asm:0026 $00FC <MOD> <L> `,` <B>
m_hage_oso_l.asm:0027 $0108 <MOD> <L> `,` <C>
m_hage_oso_l.asm:0028 $0114 <MOD> <L> `,` <D>
m_hage_oso_l.asm:0029 $0120 <MOD> <L> `,` <E>
diff m_hage_oso_l.bin m_hage_oso_l.exp
E: Illegal MUL instruction. ... OK
E: Illegal MUL instruction. ... OK
E: Illegal MULS instruction. ... OK
E: Illegal DIV instruction. ... OK
E: Illegal DIVS instruction. ... OK
E: Illegal MOD instruction. ... OK
E: Illegal MUL instruction. ... OK
E: Illegal MULS instruction. ... OK
E: Illegal MUL instruction. ... OK
N: m_hage_osn
../vgsasm m_hage_osn.asm -v
  m_hage_osn.asm:0001 $0000 <MUL> <A> `,` 0xFFFFFF80
  m_hage_osn.asm:0002 $000A <MUL> <B> `,` 0xFFFFFFFF
  m_hage_osn.asm:0003 $0016 <MUL> <C> `,` 0x0
  m_hage_osn.asm:0004 $0022 <MUL> <D> `,` 0x1
  m_hage_osn.asm:0005 $002E <MUL> <E> `,` 0x7F
  m_hage_osn.asm:0006 $003A <MUL> <H> `,` 0x80
  m_hage_osn.asm:0007 $0046 <MUL> <L> `,` 0xFF
  m_hage_osn.asm:0009 $0053 <MULS> <A> `,` 0xFFFFFF80
  m_hage_osn.asm:0010 $005D <MULS> <B> `,` 0xFFFFFFFF
  m_hage_osn.asm:0011 $0069 <MULS> <C> `,` 0x0
  m_hage_osn.asm:0012 $0075 <MULS> <D> `,` 0x1
  m_hage_osn.asm:0013 $0081 <MULS> <E> `,` 0x7F
  m_hage_osn.asm:0014 $008D <MULS> <H> `,` 0x80
  m_hage_osn.asm:0015 $0099 <MULS> <L> `,` 0xFF
  m_hage_osn.asm:0017 $00A6 <DIV> <A> `,` 0xFFFFFF80
  m_hage_osn.asm:0018 $00B0 <DIV> <B> `,` 0xFFFFFFFF
  m_hage_osn.asm:0019 $00BC <DIV> <C> `,` 0x0
  m_hage_osn.asm:0020 $00C8 <DIV> <D> `,` 0x1
  m_hage_osn.asm:0021 $00D4 <DIV> <E> `,` 0x7F
  m_hage_osn.asm:0022 $00E0 <DIV> <H> `,` 0x80
  m_hage_osn.asm:0023 $00EC <DIV> <L> `,` 0xFF
  m_hage_osn.asm:0025 $00F9 <DIVS> <A> `,` 0xFFFFFF80
  m_hage_osn.asm:0026 $0103 <DIVS> <B> `,` 0xFFFFFFFF
  m_hage_osn.asm:0027 $010F <DIVS> <C> `,` 0x0
  m_hage_osn.asm:0028 $011B <DIVS> <D> `,` 0x1
  m_hage_osn.asm:0029 $0127 <DIVS> <E> `,` 0x7F
  m_hage_osn.asm:0030 $0133 <DIVS> <H> `,` 0x80
  m_hage_osn.asm:0031 $013F <DIVS> <L> `,` 0xFF
  m_hage_osn.asm:0033 $014C <MOD> <A> `,` 0x0
  m_hage_osn.asm:0034 $0156 <MOD> <B> `,` 0x1
  m_hage_osn.asm:0035 $0162 <MOD> <C> `,` 0x3F
  m_hage_osn.asm:0036 $016E <MOD> <D> `,` 0x40
  m_hage_osn.asm:0037 $017A <MOD> <E> `,` 0x7F
  m_hage_osn.asm:0038 $0186 <MOD> <H> `,` 0x80
  m_hage_osn.asm:0039 $0192 <MOD> <L> `,` 0xFF
diff m_hage_osn.bin m_hage_osn.exp
E: MOD cannot operate on negative numbers. ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
E: Illegal MUL instruction. ... OK
N: m_atn2_oso
../vgsasm m_atn2_oso.asm -v
  m_atn2_oso.asm:0001 $0000 <ATN2> <A> `,` <HL>
  m_atn2_oso.asm:0002 $0002 <ATN2> <A> `,` <BC>
  m_atn2_oso.asm:0003 $0008 <ATN2> <A> `,` <DE>
diff m_atn2_oso.bin m_atn2_oso.exp
E: Illegal ATN2 instruction. ... OK
E: Illegal ATN2 instruction. ... OK
E: Illegal ATN2 instruction. ... OK
N: m_sin_o
../vgsasm m_sin_o.asm -v
     m_sin_o.asm:0001 $0000 <SIN> <A>
     m_sin_o.asm:0002 $0002 <SIN> <B>
     m_sin_o.asm:0003 $0005 <SIN> <C>
     m_sin_o.asm:0004 $0008 <SIN> <D>
     m_sin_o.asm:0005 $000B <SIN> <E>
     m_sin_o.asm:0006 $000E <SIN> <H>
     m_sin_o.asm:0007 $0011 <SIN> <L>
diff m_sin_o.bin m_sin_o.exp
E: Illegal SIN instruction. ... OK
N: m_sin_oso
../vgsasm m_sin_oso.asm -v
   m_sin_oso.asm:0001 $0000 <SIN> <A> `,` <A>
   m_sin_oso.asm:0002 $0002 <SIN> <A> `,` <B>
   m_sin_oso.asm:0003 $0005 <SIN> <A> `,` <C>
   m_sin_oso.asm:0004 $0008 <SIN> <A> `,` <D>
   m_sin_oso.asm:0005 $000B <SIN> <A> `,` <E>
   m_sin_oso.asm:0006 $000E <SIN> <A> `,` <H>
   m_sin_oso.asm:0007 $0011 <SIN> <A> `,` <L>
diff m_sin_oso.bin m_sin_oso.exp
E: Illegal SIN instruction. ... OK
E: Illegal SIN instruction. ... OK
E: Illegal SIN instruction. ... OK
N: m_cos_o
../vgsasm m_cos_o.asm -v
     m_cos_o.asm:0001 $0000 <COS> <A>
     m_cos_o.asm:0002 $0002 <COS> <B>
     m_cos_o.asm:0003 $0005 <COS> <C>
     m_cos_o.asm:0004 $0008 <COS> <D>
     m_cos_o.asm:0005 $000B <COS> <E>
     m_cos_o.asm:0006 $000E <COS> <H>
     m_cos_o.asm:0007 $0011 <COS> <L>
diff m_cos_o.bin m_cos_o.exp
E: Illegal COS instruction. ... OK
N: m_cos_oso
../vgsasm m_cos_oso.asm -v
   m_cos_oso.asm:0001 $0000 <COS> <A> `,` <A>
   m_cos_oso.asm:0002 $0002 <COS> <A> `,` <B>
   m_cos_oso.asm:0003 $0005 <COS> <A> `,` <C>
   m_cos_oso.asm:0004 $0008 <COS> <A> `,` <D>
   m_cos_oso.asm:0005 $000B <COS> <A> `,` <E>
   m_cos_oso.asm:0006 $000E <COS> <A> `,` <H>
   m_cos_oso.asm:0007 $0011 <COS> <A> `,` <L>
diff m_cos_oso.bin m_cos_oso.exp
E: Illegal COS instruction. ... OK
E: Illegal COS instruction. ... OK
E: Illegal COS instruction. ... OK
N: m_ld_oso8_a
../vgsasm m_ld_oso8_a.asm -v
 m_ld_oso8_a.asm:0001 $0000 <LD> <A> `,` <A>
 m_ld_oso8_a.asm:0002 $0001 <LD> <A> `,` <B>
 m_ld_oso8_a.asm:0003 $0002 <LD> <A> `,` <C>
 m_ld_oso8_a.asm:0004 $0003 <LD> <A> `,` <D>
 m_ld_oso8_a.asm:0005 $0004 <LD> <A> `,` <E>
 m_ld_oso8_a.asm:0006 $0005 <LD> <A> `,` <H>
 m_ld_oso8_a.asm:0007 $0006 <LD> <A> `,` <L>
 m_ld_oso8_a.asm:0008 $0007 <LD> <A> `,` <IXH>
 m_ld_oso8_a.asm:0009 $0009 <LD> <A> `,` <IXL>
 m_ld_oso8_a.asm:0010 $000B <LD> <A> `,` <IYH>
 m_ld_oso8_a.asm:0011 $000D <LD> <A> `,` <IYL>
diff m_ld_oso8_a.bin m_ld_oso8_a.exp
N: m_ld_oso8_b
../vgsasm m_ld_oso8_b.asm -v
 m_ld_oso8_b.asm:0001 $0000 <LD> <B> `,` <A>
 m_ld_oso8_b.asm:0002 $0001 <LD> <B> `,` <B>
 m_ld_oso8_b.asm:0003 $0002 <LD> <B> `,` <C>
 m_ld_oso8_b.asm:0004 $0003 <LD> <B> `,` <D>
 m_ld_oso8_b.asm:0005 $0004 <LD> <B> `,` <E>
 m_ld_oso8_b.asm:0006 $0005 <LD> <B> `,` <H>
 m_ld_oso8_b.asm:0007 $0006 <LD> <B> `,` <L>
 m_ld_oso8_b.asm:0008 $0007 <LD> <B> `,` <IXH>
 m_ld_oso8_b.asm:0009 $0009 <LD> <B> `,` <IXL>
 m_ld_oso8_b.asm:0010 $000B <LD> <B> `,` <IYH>
 m_ld_oso8_b.asm:0011 $000D <LD> <B> `,` <IYL>
diff m_ld_oso8_b.bin m_ld_oso8_b.exp
N: m_ld_oso8_c
../vgsasm m_ld_oso8_c.asm -v
 m_ld_oso8_c.asm:0001 $0000 <LD> <C> `,` <A>
 m_ld_oso8_c.asm:0002 $0001 <LD> <C> `,` <B>
 m_ld_oso8_c.asm:0003 $0002 <LD> <C> `,` <C>
 m_ld_oso8_c.asm:0004 $0003 <LD> <C> `,` <D>
 m_ld_oso8_c.asm:0005 $0004 <LD> <C> `,` <E>
 m_ld_oso8_c.asm:0006 $0005 <LD> <C> `,` <H>
 m_ld_oso8_c.asm:0007 $0006 <LD> <C> `,` <L>
 m_ld_oso8_c.asm:0008 $0007 <LD> <C> `,` <IXH>
 m_ld_oso8_c.asm:0009 $0009 <LD> <C> `,` <IXL>
 m_ld_oso8_c.asm:0010 $000B <LD> <C> `,` <IYH>
 m_ld_oso8_c.asm:0011 $000D <LD> <C> `,` <IYL>
diff m_ld_oso8_c.bin m_ld_oso8_c.exp
N: m_ld_oso8_d
../vgsasm m_ld_oso8_d.asm -v
 m_ld_oso8_d.asm:0001 $0000 <LD> <D> `,` <A>
 m_ld_oso8_d.asm:0002 $0001 <LD> <D> `,` <B>
 m_ld_oso8_d.asm:0003 $0002 <LD> <D> `,` <C>
 m_ld_oso8_d.asm:0004 $0003 <LD> <D> `,` <D>
 m_ld_oso8_d.asm:0005 $0004 <LD> <D> `,` <E>
 m_ld_oso8_d.asm:0006 $0005 <LD> <D> `,` <H>
 m_ld_oso8_d.asm:0007 $0006 <LD> <D> `,` <L>
 m_ld_oso8_d.asm:0008 $0007 <LD> <D> `,` <IXH>
 m_ld_oso8_d.asm:0009 $0009 <LD> <D> `,` <IXL>
 m_ld_oso8_d.asm:0010 $000B <LD> <D> `,` <IYH>
 m_ld_oso8_d.asm:0011 $000D <LD> <D> `,` <IYL>
diff m_ld_oso8_d.bin m_ld_oso8_d.exp
N: m_ld_oso8_e
../vgsasm m_ld_oso8_e.asm -v
 m_ld_oso8_e.asm:0001 $0000 <LD> <E> `,` <A>
 m_ld_oso8_e.asm:0002 $0001 <LD> <E> `,` <B>
 m_ld_oso8_e.asm:0003 $0002 <LD> <E> `,` <C>
 m_ld_oso8_e.asm:0004 $0003 <LD> <E> `,` <D>
 m_ld_oso8_e.asm:0005 $0004 <LD> <E> `,` <E>
 m_ld_oso8_e.asm:0006 $0005 <LD> <E> `,` <H>
 m_ld_oso8_e.asm:0007 $0006 <LD> <E> `,` <L>
 m_ld_oso8_e.asm:0008 $0007 <LD> <E> `,` <IXH>
 m_ld_oso8_e.asm:0009 $0009 <LD> <E> `,` <IXL>
 m_ld_oso8_e.asm:0010 $000B <LD> <E> `,` <IYH>
 m_ld_oso8_e.asm:0011 $000D <LD> <E> `,` <IYL>
diff m_ld_oso8_e.bin m_ld_oso8_e.exp
N: m_ld_oso8_h
../vgsasm m_ld_oso8_h.asm -v
 m_ld_oso8_h.asm:0001 $0000 <LD> <H> `,` <A>
 m_ld_oso8_h.asm:0002 $0001 <LD> <H> `,` <B>
 m_ld_oso8_h.asm:0003 $0002 <LD> <H> `,` <C>
 m_ld_oso8_h.asm:0004 $0003 <LD> <H> `,` <D>
 m_ld_oso8_h.asm:0005 $0004 <LD> <H> `,` <E>
 m_ld_oso8_h.asm:0006 $0005 <LD> <H> `,` <H>
 m_ld_oso8_h.asm:0007 $0006 <LD> <H> `,` <L>
diff m_ld_oso8_h.bin m_ld_oso8_h.exp
N: m_ld_oso8_l
../vgsasm m_ld_oso8_l.asm -v
 m_ld_oso8_l.asm:0001 $0000 <LD> <L> `,` <A>
 m_ld_oso8_l.asm:0002 $0001 <LD> <L> `,` <B>
 m_ld_oso8_l.asm:0003 $0002 <LD> <L> `,` <C>
 m_ld_oso8_l.asm:0004 $0003 <LD> <L> `,` <D>
 m_ld_oso8_l.asm:0005 $0004 <LD> <L> `,` <E>
 m_ld_oso8_l.asm:0006 $0005 <LD> <L> `,` <H>
 m_ld_oso8_l.asm:0007 $0006 <LD> <L> `,` <L>
diff m_ld_oso8_l.bin m_ld_oso8_l.exp
N: m_ld_oso8_ixh
../vgsasm m_ld_oso8_ixh.asm -v
m_ld_oso8_ixh.asm:0001 $0000 <LD> <IXH> `,` <A>
m_ld_oso8_ixh.asm:0002 $0002 <LD> <IXH> `,` <B>
m_ld_oso8_ixh.asm:0003 $0004 <LD> <IXH> `,` <C>
m_ld_oso8_ixh.asm:0004 $0006 <LD> <IXH> `,` <D>
m_ld_oso8_ixh.asm:0005 $0008 <LD> <IXH> `,` <E>
m_ld_oso8_ixh.asm:0008 $000A <LD> <IXH> `,` <IXH>
m_ld_oso8_ixh.asm:0009 $000C <LD> <IXH> `,` <IXL>
diff m_ld_oso8_ixh.bin m_ld_oso8_ixh.exp
N: m_ld_oso8_ixl
../vgsasm m_ld_oso8_ixl.asm -v
m_ld_oso8_ixl.asm:0001 $0000 <LD> <IXL> `,` <A>
m_ld_oso8_ixl.asm:0002 $0002 <LD> <IXL> `,` <B>
m_ld_oso8_ixl.asm:0003 $0004 <LD> <IXL> `,` <C>
m_ld_oso8_ixl.asm:0004 $0006 <LD> <IXL> `,` <D>
m_ld_oso8_ixl.asm:0005 $0008 <LD> <IXL> `,` <E>
m_ld_oso8_ixl.asm:0008 $000A <LD> <IXL> `,` <IXH>
m_ld_oso8_ixl.asm:0009 $000C <LD> <IXL> `,` <IXL>
diff m_ld_oso8_ixl.bin m_ld_oso8_ixl.exp
N: m_ld_oso8_iyh
../vgsasm m_ld_oso8_iyh.asm -v
m_ld_oso8_iyh.asm:0001 $0000 <LD> <IYH> `,` <A>
m_ld_oso8_iyh.asm:0002 $0002 <LD> <IYH> `,` <B>
m_ld_oso8_iyh.asm:0003 $0004 <LD> <IYH> `,` <C>
m_ld_oso8_iyh.asm:0004 $0006 <LD> <IYH> `,` <D>
m_ld_oso8_iyh.asm:0005 $0008 <LD> <IYH> `,` <E>
m_ld_oso8_iyh.asm:0010 $000A <LD> <IYH> `,` <IYH>
m_ld_oso8_iyh.asm:0011 $000C <LD> <IYH> `,` <IYL>
diff m_ld_oso8_iyh.bin m_ld_oso8_iyh.exp
N: m_ld_oso8_iyl
../vgsasm m_ld_oso8_iyl.asm -v
m_ld_oso8_iyl.asm:0001 $0000 <LD> <IYL> `,` <A>
m_ld_oso8_iyl.asm:0002 $0002 <LD> <IYL> `,` <B>
m_ld_oso8_iyl.asm:0003 $0004 <LD> <IYL> `,` <C>
m_ld_oso8_iyl.asm:0004 $0006 <LD> <IYL> `,` <D>
m_ld_oso8_iyl.asm:0005 $0008 <LD> <IYL> `,` <E>
m_ld_oso8_iyl.asm:0010 $000A <LD> <IYL> `,` <IYH>
m_ld_oso8_iyl.asm:0011 $000C <LD> <IYL> `,` <IYL>
diff m_ld_oso8_iyl.bin m_ld_oso8_iyl.exp
E: LD {H|L},{IXH|IXL} is not supported. ... OK
E: LD {H|L},{IXH|IXL} is not supported. ... OK
E: LD {H|L},{IYH|IYL} is not supported. ... OK
E: LD {H|L},{IYH|IYL} is not supported. ... OK
E: LD {H|L},{IXH|IXL} is not supported. ... OK
E: LD {H|L},{IXH|IXL} is not supported. ... OK
E: LD {H|L},{IYH|IYL} is not supported. ... OK
E: LD {H|L},{IYH|IYL} is not supported. ... OK
E: LD {IXH|IXL},{H|L} is not supported. ... OK
E: LD {IXH|IXL},{H|L} is not supported. ... OK
E: LD {IXH|IXL},{IYH|IYL} is not supported. ... OK
E: LD {IXH|IXL},{IYH|IYL} is not supported. ... OK
E: LD {IXH|IXL},{H|L} is not supported. ... OK
E: LD {IXH|IXL},{H|L} is not supported. ... OK
E: LD {IXH|IXL},{IYH|IYL} is not supported. ... OK
E: LD {IXH|IXL},{IYH|IYL} is not supported. ... OK
E: LD {IYH|IYL},{H|L} is not supported. ... OK
E: LD {IYH|IYL},{H|L} is not supported. ... OK
E: LD {IYH|IYL},{IXH|IXL} is not supported. ... OK
E: LD {IYH|IYL},{IXH|IXL} is not supported. ... OK
N: m_ld_oso16_bc
../vgsasm m_ld_oso16_bc.asm -v
m_ld_oso16_bc.asm:0001 $0000 <LD> <BC> `,` <BC>
m_ld_oso16_bc.asm:0002 $0002 <LD> <BC> `,` <DE>
m_ld_oso16_bc.asm:0003 $0004 <LD> <BC> `,` <HL>
m_ld_oso16_bc.asm:0004 $0006 <LD> <BC> `,` <IX>
m_ld_oso16_bc.asm:0005 $000A <LD> <BC> `,` <IY>
diff m_ld_oso16_bc.bin m_ld_oso16_bc.exp
N: m_ld_oso16_de
../vgsasm m_ld_oso16_de.asm -v
m_ld_oso16_de.asm:0001 $0000 <LD> <DE> `,` <BC>
m_ld_oso16_de.asm:0002 $0002 <LD> <DE> `,` <DE>
m_ld_oso16_de.asm:0003 $0004 <LD> <DE> `,` <HL>
m_ld_oso16_de.asm:0004 $0006 <LD> <DE> `,` <IX>
m_ld_oso16_de.asm:0005 $000A <LD> <DE> `,` <IY>
diff m_ld_oso16_de.bin m_ld_oso16_de.exp
N: m_ld_oso16_hl
../vgsasm m_ld_oso16_hl.asm -v
m_ld_oso16_hl.asm:0001 $0000 <LD> <HL> `,` <BC>
m_ld_oso16_hl.asm:0002 $0002 <LD> <HL> `,` <DE>
m_ld_oso16_hl.asm:0003 $0004 <LD> <HL> `,` <HL>
m_ld_oso16_hl.asm:0004 $0006 <LD> <HL> `,` <IX>
m_ld_oso16_hl.asm:0005 $0009 <LD> <HL> `,` <IY>
diff m_ld_oso16_hl.bin m_ld_oso16_hl.exp
N: m_ld_oso16_ix
../vgsasm m_ld_oso16_ix.asm -v
m_ld_oso16_ix.asm:0001 $0000 <LD> <IX> `,` <BC>
m_ld_oso16_ix.asm:0002 $0004 <LD> <IX> `,` <DE>
m_ld_oso16_ix.asm:0003 $0008 <LD> <IX> `,` <HL>
m_ld_oso16_ix.asm:0004 $000B <LD> <IX> `,` <IX>
m_ld_oso16_ix.asm:0005 $000F <LD> <IX> `,` <IY>
diff m_ld_oso16_ix.bin m_ld_oso16_ix.exp
N: m_ld_oso16_iy
../vgsasm m_ld_oso16_iy.asm -v
m_ld_oso16_iy.asm:0001 $0000 <LD> <IY> `,` <BC>
m_ld_oso16_iy.asm:0002 $0004 <LD> <IY> `,` <DE>
m_ld_oso16_iy.asm:0003 $0008 <LD> <IY> `,` <HL>
m_ld_oso16_iy.asm:0004 $000B <LD> <IY> `,` <IX>
m_ld_oso16_iy.asm:0005 $000F <LD> <IY> `,` <IY>
diff m_ld_oso16_iy.bin m_ld_oso16_iy.exp
N: m_ld_oso16_sp
../vgsasm m_ld_oso16_sp.asm -v
m_ld_oso16_sp.asm:0001 $0000 <LD> <SP> `,` <HL>
m_ld_oso16_sp.asm:0002 $0001 <LD> <SP> `,` <IX>
m_ld_oso16_sp.asm:0003 $0003 <LD> <SP> `,` <IY>
diff m_ld_oso16_sp.bin m_ld_oso16_sp.exp
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
N: m_ld_osaoa_hl
../vgsasm m_ld_osaoa_hl.asm -v
m_ld_osaoa_hl.asm:0001 $0000 <LD> <A> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0002 $0001 <LD> <B> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0003 $0002 <LD> <C> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0004 $0003 <LD> <D> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0005 $0004 <LD> <E> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0006 $0005 <LD> <H> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0007 $0006 <LD> <L> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0008 $0007 <LD> <IXH> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0009 $000C <LD> <IXL> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0010 $0011 <LD> <IYH> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0011 $0016 <LD> <IYL> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0012 $001B <LD> <BC> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0013 $001F <LD> <DE> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0014 $0023 <LD> <IX> `,` _( <HL> )_
m_ld_osaoa_hl.asm:0015 $002D <LD> <IY> `,` _( <HL> )_
diff m_ld_osaoa_hl.bin m_ld_osaoa_hl.exp
E: Illegal LD instruction. ... OK
N: m_ld_aoaso_hl
../vgsasm m_ld_aoaso_hl.asm -v
m_ld_aoaso_hl.asm:0001 $0000 <LD> _( <HL> )_ `,` <A>
m_ld_aoaso_hl.asm:0002 $0001 <LD> _( <HL> )_ `,` <B>
m_ld_aoaso_hl.asm:0003 $0002 <LD> _( <HL> )_ `,` <C>
m_ld_aoaso_hl.asm:0004 $0003 <LD> _( <HL> )_ `,` <D>
m_ld_aoaso_hl.asm:0005 $0004 <LD> _( <HL> )_ `,` <E>
m_ld_aoaso_hl.asm:0006 $0005 <LD> _( <HL> )_ `,` <H>
m_ld_aoaso_hl.asm:0007 $0006 <LD> _( <HL> )_ `,` <L>
m_ld_aoaso_hl.asm:0008 $0007 <LD> _( <HL> )_ `,` <IXH>
m_ld_aoaso_hl.asm:0009 $000C <LD> _( <HL> )_ `,` <IXL>
m_ld_aoaso_hl.asm:0010 $0011 <LD> _( <HL> )_ `,` <IYH>
m_ld_aoaso_hl.asm:0011 $0016 <LD> _( <HL> )_ `,` <IYL>
m_ld_aoaso_hl.asm:0012 $001B <LD> _( <HL> )_ `,` <BC>
m_ld_aoaso_hl.asm:0013 $001F <LD> _( <HL> )_ `,` <DE>
m_ld_aoaso_hl.asm:0014 $0023 <LD> _( <HL> )_ `,` <IX>
m_ld_aoaso_hl.asm:0015 $002D <LD> _( <HL> )_ `,` <IY>
diff m_ld_aoaso_hl.bin m_ld_aoaso_hl.exp
E: Illegal LD instruction. ... OK
N: m_ld_a_bc
../vgsasm m_ld_a_bc.asm -v
   m_ld_a_bc.asm:0001 $0000 <LD> <A> `,` _( <BC> )_
diff m_ld_a_bc.bin m_ld_a_bc.exp
N: m_ld_a_de
../vgsasm m_ld_a_de.asm -v
   m_ld_a_de.asm:0001 $0000 <LD> <A> `,` _( <DE> )_
diff m_ld_a_de.bin m_ld_a_de.exp
N: m_ld_bc_a
../vgsasm m_ld_bc_a.asm -v
   m_ld_bc_a.asm:0001 $0000 <LD> _( <BC> )_ `,` <A>
diff m_ld_bc_a.bin m_ld_bc_a.exp
N: m_ld_de_a
../vgsasm m_ld_de_a.asm -v
   m_ld_de_a.asm:0001 $0000 <LD> _( <DE> )_ `,` <A>
diff m_ld_de_a.bin m_ld_de_a.exp
N: m_ld_osn8
../vgsasm m_ld_osn8.asm -v
   m_ld_osn8.asm:0001 $0000 <LD> <A> `,` 0xFFFFFF80
   m_ld_osn8.asm:0002 $0002 <LD> <B> `,` 0xFFFFFFFF
   m_ld_osn8.asm:0003 $0004 <LD> <C> `,` 0x0
   m_ld_osn8.asm:0004 $0006 <LD> <D> `,` 0x1
   m_ld_osn8.asm:0005 $0008 <LD> <E> `,` 0x7F
   m_ld_osn8.asm:0006 $000A <LD> <H> `,` 0x80
   m_ld_osn8.asm:0007 $000C <LD> <L> `,` 0xFF
   m_ld_osn8.asm:0008 $000E <LD> <IXH> `,` 0x3F
   m_ld_osn8.asm:0009 $0011 <LD> <IXL> `,` 0x40
   m_ld_osn8.asm:0010 $0014 <LD> <IYH> `,` 0x64
   m_ld_osn8.asm:0011 $0017 <LD> <IYL> `,` 0xC8
diff m_ld_osn8.bin m_ld_osn8.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
N: m_ld_osn16
../vgsasm m_ld_osn16.asm -v
  m_ld_osn16.asm:0001 $0000 <LD> <BC> `,` 0xFFFF8000
  m_ld_osn16.asm:0002 $0003 <LD> <DE> `,` 0xFFFFFFFF
  m_ld_osn16.asm:0003 $0006 <LD> <HL> `,` 0x0
  m_ld_osn16.asm:0004 $0009 <LD> <IX> `,` 0x1
  m_ld_osn16.asm:0005 $000D <LD> <IY> `,` 0x7FFF
  m_ld_osn16.asm:0006 $0011 <LD> <SP> `,` 0xFFFF
diff m_ld_osn16.bin m_ld_osn16.exp
E: Numerical range incorrect: -32769 ... OK
E: Numerical range incorrect: 65536 ... OK
E: Illegal LD instruction. ... OK
N: m_ld_osl
../vgsasm m_ld_osl.asm -v
    m_ld_osl.asm:0001 $0000 LABEL1:
    m_ld_osl.asm:0002 $0000 <NOP>
    m_ld_osl.asm:0003 $0001 LABEL2:
    m_ld_osl.asm:0004 $0001 <NOP>
    m_ld_osl.asm:0005 $0002 LABEL3@LABEL2:
    m_ld_osl.asm:0006 $0002 <NOP>
    m_ld_osl.asm:0008 $0003 <LD> <BC> `,` `LABEL1`
    m_ld_osl.asm:0009 $0006 <LD> <DE> `,` `LABEL2`
    m_ld_osl.asm:0010 $0009 <LD> <HL> `,` `LABEL3@LABEL2`
    m_ld_osl.asm:0011 $000C <LD> <SP> `,` `LABEL3@LABEL2`
    m_ld_osl.asm:0012 $000F <LD> <IX> `,` `LABEL1`
    m_ld_osl.asm:0013 $0013 <LD> <IY> `,` `LABEL2`
diff m_ld_osl.bin m_ld_osl.exp
E: Illegal LD instruction. ... OK
N: m_ld_osana
../vgsasm m_ld_osana.asm -v
  m_ld_osana.asm:0001 $0000 <LD> <A> `,` _( 0x0 )_
  m_ld_osana.asm:0002 $0003 <LD> <B> `,` _( 0x64 )_
  m_ld_osana.asm:0003 $0009 <LD> <C> `,` _( 0xC8 )_
  m_ld_osana.asm:0004 $000F <LD> <D> `,` _( 0x12C )_
  m_ld_osana.asm:0005 $0015 <LD> <E> `,` _( 0x190 )_
  m_ld_osana.asm:0006 $001B <LD> <H> `,` _( 0x1F4 )_
  m_ld_osana.asm:0007 $0021 <LD> <L> `,` _( 0x258 )_
  m_ld_osana.asm:0008 $0027 <LD> <IXH> `,` _( 0x3E8 )_
  m_ld_osana.asm:0009 $002E <LD> <IXL> `,` _( 0x7D0 )_
  m_ld_osana.asm:0010 $0035 <LD> <IYH> `,` _( 0xBB8 )_
  m_ld_osana.asm:0011 $003C <LD> <IYL> `,` _( 0xFA0 )_
  m_ld_osana.asm:0012 $0043 <LD> <BC> `,` _( 0x1 )_
  m_ld_osana.asm:0013 $0047 <LD> <DE> `,` _( 0x7FFF )_
  m_ld_osana.asm:0014 $004B <LD> <HL> `,` _( 0x8000 )_
  m_ld_osana.asm:0015 $004E <LD> <SP> `,` _( 0xFFFF )_
  m_ld_osana.asm:0016 $0052 <LD> <IX> `,` _( 0x4D2 )_
  m_ld_osana.asm:0017 $0056 <LD> <IY> `,` _( 0x162E )_
diff m_ld_osana.bin m_ld_osana.exp
E: Numerical range incorrect: 65536 ... OK
E: Illegal LD instruction. ... OK
N: m_ld_osala
../vgsasm m_ld_osala.asm -v
  m_ld_osala.asm:0001 $0000 <NOP>
  m_ld_osala.asm:0002 $0001 LABEL1:
  m_ld_osala.asm:0003 $0001 <NOP>
  m_ld_osala.asm:0004 $0002 LABEL2:
  m_ld_osala.asm:0005 $0002 <NOP>
  m_ld_osala.asm:0006 $0003 LABEL3@LABEL2:
  m_ld_osala.asm:0007 $0003 <NOP>
  m_ld_osala.asm:0009 $0004 <LD> <A> `,` _( `LABEL1` )_
  m_ld_osala.asm:0010 $0007 <LD> <B> `,` _( `LABEL2` )_
  m_ld_osala.asm:0011 $000D <LD> <C> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0012 $0013 <LD> <D> `,` _( `LABEL1` )_
  m_ld_osala.asm:0013 $0019 <LD> <E> `,` _( `LABEL2` )_
  m_ld_osala.asm:0014 $001F <LD> <H> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0015 $0025 <LD> <L> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0016 $002B <LD> <IXH> `,` _( `LABEL1` )_
  m_ld_osala.asm:0017 $0032 <LD> <IXL> `,` _( `LABEL2` )_
  m_ld_osala.asm:0018 $0039 <LD> <IYH> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0019 $0040 <LD> <IYL> `,` _( `LABEL1` )_
  m_ld_osala.asm:0020 $0047 <LD> <HL> `,` _( `LABEL2` )_
  m_ld_osala.asm:0021 $004A <LD> <DE> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0022 $004E <LD> <BC> `,` _( `LABEL1` )_
  m_ld_osala.asm:0023 $0052 <LD> <SP> `,` _( `LABEL2` )_
  m_ld_osala.asm:0024 $0056 <LD> <IX> `,` _( `LABEL3@LABEL2` )_
  m_ld_osala.asm:0025 $005A <LD> <IY> `,` _( `LABEL1` )_
diff m_ld_osala.bin m_ld_osala.exp
E: Illegal LD instruction. ... OK
N: m_ld_anaso
../vgsasm m_ld_anaso.asm -v
  m_ld_anaso.asm:0001 $0000 <LD> _( 0x0 )_ `,` <A>
  m_ld_anaso.asm:0002 $0003 <LD> _( 0x100 )_ `,` <B>
  m_ld_anaso.asm:0003 $0009 <LD> _( 0x200 )_ `,` <C>
  m_ld_anaso.asm:0004 $000F <LD> _( 0x400 )_ `,` <D>
  m_ld_anaso.asm:0005 $0015 <LD> _( 0x800 )_ `,` <E>
  m_ld_anaso.asm:0006 $001B <LD> _( 0x1000 )_ `,` <H>
  m_ld_anaso.asm:0007 $0021 <LD> _( 0x2000 )_ `,` <L>
  m_ld_anaso.asm:0008 $0027 <LD> _( 0x4000 )_ `,` <IXH>
  m_ld_anaso.asm:0009 $002E <LD> _( 0x8000 )_ `,` <IXL>
  m_ld_anaso.asm:0010 $0035 <LD> _( 0xFFFF )_ `,` <IYH>
  m_ld_anaso.asm:0011 $003C <LD> _( 0x3E8 )_ `,` <IYL>
  m_ld_anaso.asm:0012 $0043 <LD> _( 0x7D0 )_ `,` <BC>
  m_ld_anaso.asm:0013 $0047 <LD> _( 0xBB8 )_ `,` <DE>
  m_ld_anaso.asm:0014 $004B <LD> _( 0xFA0 )_ `,` <HL>
  m_ld_anaso.asm:0015 $004E <LD> _( 0x1388 )_ `,` <SP>
  m_ld_anaso.asm:0016 $0052 <LD> _( 0x1770 )_ `,` <IX>
  m_ld_anaso.asm:0017 $0056 <LD> _( 0x1B58 )_ `,` <IY>
diff m_ld_anaso.bin m_ld_anaso.exp
E: Numerical range incorrect: 65536 ... OK
E: Illegal LD instruction. ... OK
N: m_ld_alaso
../vgsasm m_ld_alaso.asm -v
  m_ld_alaso.asm:0001 $0000 <NOP>
  m_ld_alaso.asm:0002 $0001 LABEL1:
  m_ld_alaso.asm:0003 $0001 <NOP>
  m_ld_alaso.asm:0004 $0002 LABEL2:
  m_ld_alaso.asm:0005 $0002 <NOP>
  m_ld_alaso.asm:0006 $0003 LABEL3@LABEL2:
  m_ld_alaso.asm:0007 $0003 <NOP>
  m_ld_alaso.asm:0008 $0004 LABEL4@LABEL2:
  m_ld_alaso.asm:0010 $0004 <LD> _( `LABEL1` )_ `,` <A>
  m_ld_alaso.asm:0011 $0007 <LD> _( `LABEL2` )_ `,` <B>
  m_ld_alaso.asm:0012 $000D <LD> _( `LABEL3@LABEL2` )_ `,` <C>
  m_ld_alaso.asm:0013 $0013 <LD> _( `LABEL4@LABEL2` )_ `,` <D>
  m_ld_alaso.asm:0014 $0019 <LD> _( `LABEL1` )_ `,` <E>
  m_ld_alaso.asm:0015 $001F <LD> _( `LABEL2` )_ `,` <H>
  m_ld_alaso.asm:0016 $0025 <LD> _( `LABEL3@LABEL2` )_ `,` <L>
  m_ld_alaso.asm:0017 $002B <LD> _( `LABEL4@LABEL2` )_ `,` <IXH>
  m_ld_alaso.asm:0018 $0032 <LD> _( `LABEL1` )_ `,` <IXL>
  m_ld_alaso.asm:0019 $0039 <LD> _( `LABEL2` )_ `,` <IYH>
  m_ld_alaso.asm:0020 $0040 <LD> _( `LABEL3@LABEL2` )_ `,` <IYL>
  m_ld_alaso.asm:0021 $0047 <LD> _( `LABEL4@LABEL2` )_ `,` <BC>
  m_ld_alaso.asm:0022 $004B <LD> _( `LABEL1` )_ `,` <DE>
  m_ld_alaso.asm:0023 $004F <LD> _( `LABEL2` )_ `,` <HL>
  m_ld_alaso.asm:0024 $0052 <LD> _( `LABEL3@LABEL2` )_ `,` <SP>
  m_ld_alaso.asm:0025 $0056 <LD> _( `LABEL4@LABEL2` )_ `,` <IX>
  m_ld_alaso.asm:0026 $005A <LD> _( `LABEL1` )_ `,` <IY>
diff m_ld_alaso.bin m_ld_alaso.exp
E: Illegal LD instruction. ... OK
N: m_ld_anasn
../vgsasm m_ld_anasn.asm -v
  m_ld_anasn.asm:0001 $0000 <LD> _( 0x0 )_ `,` 0xFFFFFF80
  m_ld_anasn.asm:0002 $0007 <LD> _( 0x400 )_ `,` 0xFFFFFFFF
  m_ld_anasn.asm:0003 $000E <LD> _( 0x800 )_ `,` 0x0
  m_ld_anasn.asm:0004 $0015 <LD> _( 0x1000 )_ `,` 0x1
  m_ld_anasn.asm:0005 $001C <LD> _( 0x2000 )_ `,` 0x7F
  m_ld_anasn.asm:0006 $0023 <LD> _( 0x4000 )_ `,` 0x80
  m_ld_anasn.asm:0007 $002A <LD> _( 0x8000 )_ `,` 0xFE
  m_ld_anasn.asm:0008 $0031 <LD> _( 0xFFFF )_ `,` 0xFF
diff m_ld_anasn.bin m_ld_anasn.exp
E: Numerical range incorrect: 65536 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
N: m_ld_alasn
../vgsasm m_ld_alasn.asm -v
  m_ld_alasn.asm:0001 $0000 LABEL:
  m_ld_alasn.asm:0002 $0000 <LD> _( `LABEL` )_ `,` 0xFFFFFF80
  m_ld_alasn.asm:0003 $0007 <LD> _( `LABEL` )_ `,` 0xFF
diff m_ld_alasn.bin m_ld_alasn.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
N: m_ld_osaopna8_ix
../vgsasm m_ld_osaopna8_ix.asm -v
m_ld_osaopna8_ix.asm:0001 $0000 <LD> <A> `,` _( <IX> `-` 0x80 )_
m_ld_osaopna8_ix.asm:0002 $0003 <LD> <B> `,` _( <IX> `-` 0x1 )_
m_ld_osaopna8_ix.asm:0003 $0006 <LD> <C> `,` _( <IX> `-` 0x0 )_
m_ld_osaopna8_ix.asm:0004 $0009 <LD> <D> `,` _( <IX> `+` 0x1 )_
m_ld_osaopna8_ix.asm:0005 $000C <LD> <E> `,` _( <IX> `+` 0x7F )_
m_ld_osaopna8_ix.asm:0006 $000F <LD> <H> `,` _( <IX> `+` 0x3F )_
m_ld_osaopna8_ix.asm:0007 $0012 <LD> <L> `,` _( <IX> `-` 0x40 )_
diff m_ld_osaopna8_ix.bin m_ld_osaopna8_ix.exp
N: m_ld_osaopna8_iy
../vgsasm m_ld_osaopna8_iy.asm -v
m_ld_osaopna8_iy.asm:0001 $0000 <LD> <A> `,` _( <IY> `-` 0x80 )_
m_ld_osaopna8_iy.asm:0002 $0003 <LD> <B> `,` _( <IY> `-` 0x1 )_
m_ld_osaopna8_iy.asm:0003 $0006 <LD> <C> `,` _( <IY> `-` 0x0 )_
m_ld_osaopna8_iy.asm:0004 $0009 <LD> <D> `,` _( <IY> `+` 0x1 )_
m_ld_osaopna8_iy.asm:0005 $000C <LD> <E> `,` _( <IY> `+` 0x7F )_
m_ld_osaopna8_iy.asm:0006 $000F <LD> <H> `,` _( <IY> `+` 0x3F )_
m_ld_osaopna8_iy.asm:0007 $0012 <LD> <L> `,` _( <IY> `-` 0x40 )_
diff m_ld_osaopna8_iy.bin m_ld_osaopna8_iy.exp
N: m_ld_osaopna16_ix
../vgsasm m_ld_osaopna16_ix.asm -v
m_ld_osaopna16_ix.asm:0001 $0000 <LD> <BC> `,` _( <IX> `-` 0x80 )_
m_ld_osaopna16_ix.asm:0002 $0006 <LD> <DE> `,` _( <IX> `-` 0x1 )_
m_ld_osaopna16_ix.asm:0003 $000C <LD> <HL> `,` _( <IX> `+` 0x7F )_
diff m_ld_osaopna16_ix.bin m_ld_osaopna16_ix.exp
N: m_ld_osaopna16_iy
../vgsasm m_ld_osaopna16_iy.asm -v
m_ld_osaopna16_iy.asm:0001 $0000 <LD> <BC> `,` _( <IY> `-` 0x80 )_
m_ld_osaopna16_iy.asm:0002 $0006 <LD> <DE> `,` _( <IY> `-` 0x1 )_
m_ld_osaopna16_iy.asm:0003 $000C <LD> <HL> `,` _( <IY> `+` 0x7F )_
diff m_ld_osaopna16_iy.bin m_ld_osaopna16_iy.exp
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
N: m_ld_osaoa_ix
../vgsasm m_ld_osaoa_ix.asm -v
m_ld_osaoa_ix.asm:0001 $0000 <LD> <A> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0002 $0003 <LD> <B> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0003 $0006 <LD> <C> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0004 $0009 <LD> <D> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0005 $000C <LD> <E> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0006 $000F <LD> <H> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0007 $0012 <LD> <L> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0012 $0015 <LD> <BC> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0013 $001B <LD> <DE> `,` _( <IX> )_
m_ld_osaoa_ix.asm:0014 $0021 <LD> <HL> `,` _( <IX> )_
diff m_ld_osaoa_ix.bin m_ld_osaoa_ix.exp
N: m_ld_osaoa_iy
../vgsasm m_ld_osaoa_iy.asm -v
m_ld_osaoa_iy.asm:0001 $0000 <LD> <A> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0002 $0003 <LD> <B> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0003 $0006 <LD> <C> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0004 $0009 <LD> <D> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0005 $000C <LD> <E> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0006 $000F <LD> <H> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0007 $0012 <LD> <L> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0012 $0015 <LD> <BC> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0013 $001B <LD> <DE> `,` _( <IY> )_
m_ld_osaoa_iy.asm:0014 $0021 <LD> <HL> `,` _( <IY> )_
diff m_ld_osaoa_iy.bin m_ld_osaoa_iy.exp
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
N: m_ld_aopnaso_ix
../vgsasm m_ld_aopnaso_ix.asm -v
m_ld_aopnaso_ix.asm:0001 $0000 <LD> _( <IX> `-` 0x80 )_ `,` <A>
m_ld_aopnaso_ix.asm:0002 $0003 <LD> _( <IX> `-` 0x1 )_ `,` <B>
m_ld_aopnaso_ix.asm:0003 $0006 <LD> _( <IX> `+` 0x0 )_ `,` <C>
m_ld_aopnaso_ix.asm:0004 $0009 <LD> _( <IX> `+` 0x1 )_ `,` <D>
m_ld_aopnaso_ix.asm:0005 $000C <LD> _( <IX> `+` 0x7F )_ `,` <E>
m_ld_aopnaso_ix.asm:0006 $000F <LD> _( <IX> `+` 0x40 )_ `,` <H>
m_ld_aopnaso_ix.asm:0007 $0012 <LD> _( <IX> `-` 0x40 )_ `,` <L>
m_ld_aopnaso_ix.asm:0012 $0015 <LD> _( <IX> `+` 0x3F )_ `,` <BC>
m_ld_aopnaso_ix.asm:0013 $001B <LD> _( <IX> `+` 0x40 )_ `,` <DE>
m_ld_aopnaso_ix.asm:0014 $0021 <LD> _( <IX> `+` 0x7F )_ `,` <HL>
diff m_ld_aopnaso_ix.bin m_ld_aopnaso_ix.exp
N: m_ld_aopnaso_iy
../vgsasm m_ld_aopnaso_iy.asm -v
m_ld_aopnaso_iy.asm:0001 $0000 <LD> _( <IY> `-` 0x80 )_ `,` <A>
m_ld_aopnaso_iy.asm:0002 $0003 <LD> _( <IY> `-` 0x1 )_ `,` <B>
m_ld_aopnaso_iy.asm:0003 $0006 <LD> _( <IY> `+` 0x0 )_ `,` <C>
m_ld_aopnaso_iy.asm:0004 $0009 <LD> _( <IY> `+` 0x1 )_ `,` <D>
m_ld_aopnaso_iy.asm:0005 $000C <LD> _( <IY> `+` 0x7F )_ `,` <E>
m_ld_aopnaso_iy.asm:0006 $000F <LD> _( <IY> `+` 0x40 )_ `,` <H>
m_ld_aopnaso_iy.asm:0007 $0012 <LD> _( <IY> `-` 0x40 )_ `,` <L>
m_ld_aopnaso_iy.asm:0012 $0015 <LD> _( <IY> `+` 0x3F )_ `,` <BC>
m_ld_aopnaso_iy.asm:0013 $001B <LD> _( <IY> `+` 0x40 )_ `,` <DE>
m_ld_aopnaso_iy.asm:0014 $0021 <LD> _( <IY> `+` 0x7F )_ `,` <HL>
diff m_ld_aopnaso_iy.bin m_ld_aopnaso_iy.exp
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
N: m_ld_aoaso_ix
../vgsasm m_ld_aoaso_ix.asm -v
m_ld_aoaso_ix.asm:0001 $0000 <LD> _( <IX> )_ `,` <A>
m_ld_aoaso_ix.asm:0002 $0003 <LD> _( <IX> )_ `,` <B>
m_ld_aoaso_ix.asm:0003 $0006 <LD> _( <IX> )_ `,` <C>
m_ld_aoaso_ix.asm:0004 $0009 <LD> _( <IX> )_ `,` <D>
m_ld_aoaso_ix.asm:0005 $000C <LD> _( <IX> )_ `,` <E>
m_ld_aoaso_ix.asm:0006 $000F <LD> _( <IX> )_ `,` <H>
m_ld_aoaso_ix.asm:0007 $0012 <LD> _( <IX> )_ `,` <L>
m_ld_aoaso_ix.asm:0012 $0015 <LD> _( <IX> )_ `,` <BC>
m_ld_aoaso_ix.asm:0013 $001B <LD> _( <IX> )_ `,` <DE>
m_ld_aoaso_ix.asm:0014 $0021 <LD> _( <IX> )_ `,` <HL>
diff m_ld_aoaso_ix.bin m_ld_aoaso_ix.exp
N: m_ld_aoaso_iy
../vgsasm m_ld_aoaso_iy.asm -v
m_ld_aoaso_iy.asm:0001 $0000 <LD> _( <IY> )_ `,` <A>
m_ld_aoaso_iy.asm:0002 $0003 <LD> _( <IY> )_ `,` <B>
m_ld_aoaso_iy.asm:0003 $0006 <LD> _( <IY> )_ `,` <C>
m_ld_aoaso_iy.asm:0004 $0009 <LD> _( <IY> )_ `,` <D>
m_ld_aoaso_iy.asm:0005 $000C <LD> _( <IY> )_ `,` <E>
m_ld_aoaso_iy.asm:0006 $000F <LD> _( <IY> )_ `,` <H>
m_ld_aoaso_iy.asm:0007 $0012 <LD> _( <IY> )_ `,` <L>
m_ld_aoaso_iy.asm:0012 $0015 <LD> _( <IY> )_ `,` <BC>
m_ld_aoaso_iy.asm:0013 $001B <LD> _( <IY> )_ `,` <DE>
m_ld_aoaso_iy.asm:0014 $0021 <LD> _( <IY> )_ `,` <HL>
diff m_ld_aoaso_iy.bin m_ld_aoaso_iy.exp
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
E: Illegal LD instruction. ... OK
N: m_ld_aopnasn_ix
../vgsasm m_ld_aopnasn_ix.asm -v
m_ld_aopnasn_ix.asm:0001 $0000 <LD> _( <IX> `-` 0x80 )_ `,` 0xFF
m_ld_aopnasn_ix.asm:0002 $0004 <LD> _( <IX> `-` 0x1 )_ `,` 0x0
m_ld_aopnasn_ix.asm:0003 $0008 <LD> _( <IX> `+` 0x0 )_ `,` 0x80
m_ld_aopnasn_ix.asm:0004 $000C <LD> _( <IX> `+` 0x1 )_ `,` 0xC0
m_ld_aopnasn_ix.asm:0005 $0010 <LD> _( <IX> `+` 0x7F )_ `,` 0x40
diff m_ld_aopnasn_ix.bin m_ld_aopnasn_ix.exp
N: m_ld_aopnasn_iy
../vgsasm m_ld_aopnasn_iy.asm -v
m_ld_aopnasn_iy.asm:0001 $0000 <LD> _( <IY> `-` 0x80 )_ `,` 0xFF
m_ld_aopnasn_iy.asm:0002 $0004 <LD> _( <IY> `-` 0x1 )_ `,` 0x0
m_ld_aopnasn_iy.asm:0003 $0008 <LD> _( <IY> `+` 0x0 )_ `,` 0x80
m_ld_aopnasn_iy.asm:0004 $000C <LD> _( <IY> `+` 0x1 )_ `,` 0xC0
m_ld_aopnasn_iy.asm:0005 $0010 <LD> _( <IY> `+` 0x7F )_ `,` 0x40
diff m_ld_aopnasn_iy.bin m_ld_aopnasn_iy.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 128 ... OK
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
N: m_ld_aoasn
../vgsasm m_ld_aoasn.asm -v
  m_ld_aoasn.asm:0001 $0000 <LD> _( <BC> )_ `,` 0xFFFFFF80
  m_ld_aoasn.asm:0002 $0006 <LD> _( <DE> )_ `,` 0xFFFFFFFF
  m_ld_aoasn.asm:0003 $000C <LD> _( <HL> )_ `,` 0x1
  m_ld_aoasn.asm:0004 $000E <LD> _( <IX> )_ `,` 0x7F
  m_ld_aoasn.asm:0005 $0012 <LD> _( <IY> )_ `,` 0xFF
diff m_ld_aoasn.bin m_ld_aoasn.exp
E: Numerical range incorrect: -129 ... OK
E: Numerical range incorrect: 256 ... OK
E: Illegal LD instruction. ... OK
N: m_single
../vgsasm m_single.asm -v
    m_single.asm:0001 $0000 <NOP>
    m_single.asm:0002 $0001 <DI>
    m_single.asm:0003 $0002 <EI>
    m_single.asm:0004 $0003 <HALT>
    m_single.asm:0005 $0004 <EXX>
    m_single.asm:0006 $0005 <DAA>
    m_single.asm:0007 $0006 <CPL>
    m_single.asm:0008 $0007 <CCF>
    m_single.asm:0009 $0008 <SCF>
    m_single.asm:0010 $0009 <NEG>
    m_single.asm:0011 $000B <LDI>
    m_single.asm:0012 $000D <LDIR>
    m_single.asm:0013 $000F <LDD>
    m_single.asm:0014 $0011 <LDDR>
    m_single.asm:0015 $0013 <CPI>
    m_single.asm:0016 $0015 <CPIR>
    m_single.asm:0017 $0017 <CPD>
    m_single.asm:0018 $0019 <CPDR>
    m_single.asm:0019 $001B <OUTI>
    m_single.asm:0020 $001D <OUTIR>
    m_single.asm:0021 $001F <OTIR>
    m_single.asm:0022 $0021 <OUTD>
    m_single.asm:0023 $0023 <OUTDR>
    m_single.asm:0024 $0025 <OTDR>
    m_single.asm:0025 $0027 <INI>
    m_single.asm:0026 $0029 <INIR>
    m_single.asm:0027 $002B <IND>
    m_single.asm:0028 $002D <INDR>
    m_single.asm:0029 $002F <RLCA>
    m_single.asm:0030 $0030 <RRCA>
    m_single.asm:0031 $0031 <RLA>
    m_single.asm:0032 $0032 <RRA>
    m_single.asm:0033 $0033 <RLD>
    m_single.asm:0034 $0035 <RRD>
    m_single.asm:0035 $0037 <RETI>
    m_single.asm:0036 $0039 <RETN>
diff m_single.bin m_single.exp
E: Relative jump destination address is too far away: -129 ... OK
N: m_far_m128
../vgsasm m_far_m128.asm -v
  m_far_m128.asm:0001 $0000 LABEL:
  m_far_m128.asm:0003 Binary: "bin120.dat"
  m_far_m128.asm:0004 $0078 <DB> 0x0 `,` 0x0 `,` 0x0 `,` 0x0 `,` 0x0 `,` 0x0
  m_far_m128.asm:0006 $007E <JR> `LABEL`
diff m_far_m128.bin m_far_m128.exp
N: m_far_p127
../vgsasm m_far_p127.asm -v
  m_far_p127.asm:0001 $0000 <JR> `LABEL`
  m_far_p127.asm:0003 Binary: "bin120.dat"
  m_far_p127.asm:0004 $007A <DB> 0x0 `,` 0x0 `,` 0x0 `,` 0x0 `,` 0x0 `,` 0x0 `,` 0x0
  m_far_p127.asm:0006 $0081 LABEL:
diff m_far_p127.bin m_far_p127.exp
E: Relative jump destination address is too far away: 128 ... OK
N: m_sizeof
../vgsasm m_sizeof.asm -v
 ../lib/init.asm:0004 $0000 INIT:
 ../lib/init.asm:0005 $0000 <LD> <SP> `,` 0x0
 ../lib/init.asm:0006 $0003 <JP> `MAIN`
../lib/stdio.asm:0040 $0006 PRINT_TEXT_SUB:
../lib/stdio.asm:0043 $0006 <LD> <A> `,` <H>
../lib/stdio.asm:0044 $0007 <LD> <H> `,` 0x0
../lib/stdio.asm:0045 $0009 <LD> <C> `,` 0x20
../lib/stdio.asm:0046 $000B <MUL> <HL> `,` <C>
../lib/stdio.asm:0047 $0011 <ADD> <HL> `,` <A>
../lib/stdio.asm:0048 $0016 <ADD> <HL> `,` 0x8800
../lib/stdio.asm:0050 $001D LOOP@PRINT_TEXT_SUB:
../lib/stdio.asm:0052 $001D <LD> <A> `,` _( <DE> )_
../lib/stdio.asm:0053 $001E <AND> <A>
../lib/stdio.asm:0054 $001F <RET> <Z>
../lib/stdio.asm:0057 $0020 <LD> _( <HL> )_ `,` <A>
../lib/stdio.asm:0060 $0021 <PUSH> <DE>
../lib/stdio.asm:0061 $0022 <LD> <DE> `,` 0x400
../lib/stdio.asm:0062 $0025 <ADD> <HL> `,` <DE>
../lib/stdio.asm:0063 $0026 <LD> _( <HL> )_ `,` <B>
../lib/stdio.asm:0064 $0027 <LD> <DE> `,` 0xFFFFFC01
../lib/stdio.asm:0065 $002A <ADD> <HL> `,` <DE>
../lib/stdio.asm:0066 $002B <POP> <DE>
../lib/stdio.asm:0068 $002C <INC> <DE>
../lib/stdio.asm:0069 $002D <JR> `LOOP@PRINT_TEXT_SUB`
../lib/stdio.asm:0070 $002F <RET>
    m_sizeof.asm:0003 $0030 MAIN:
../lib/vgszero.inc:0116 $0030 <PUSH> <AF>
../lib/vgszero.inc:0117 $0031 <PUSH> <BC>
../lib/vgszero.inc:0118 $0032 <PUSH> <HL>
../lib/vgszero.inc:0119 $0033 <LD> <BC> `,` 0x8000
../lib/vgszero.inc:0120 $0036 <LD> <A> `,` 0x0
../lib/vgszero.inc:0121 $0038 <LD> <HL> `,` 0x400
../lib/vgszero.inc:0122 $003B <OUT> _( 0xC3 )_ `,` <A>
../lib/vgszero.inc:0123 $003D <POP> <HL>
../lib/vgszero.inc:0124 $003E <POP> <BC>
../lib/vgszero.inc:0125 $003F <POP> <AF>
diff m_sizeof.bin m_sizeof.exp
E: Undefined field XXXX of strcture VRAM is specified in sizeof. ... OK
E: Undefined structure YYYYY is specified in sizeof. ... OK
Normal case: 243
Error case: 370
Total: 613
